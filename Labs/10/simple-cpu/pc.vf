////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : pc.vf
// /___/   /\     Timestamp : 10/01/2024 08:57:52
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Classes-2024/Digital System Fundamentals Shared/Labs/10/simple-cpu/pc.vf" -w "D:/Classes-2024/Digital System Fundamentals Shared/Labs/10/simple-cpu/pc.sch"
//Design Name: pc
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB4CLED_HXILINX_pc(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR, D0, D1, D2, D3, L, UP);

   parameter TERMINAL_COUNT_UP = 4'b1111;
   parameter TERMINAL_COUNT_DOWN = 4'b0000;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;
   
   input 	      C;
   input 	      CE;
   input 	      CLR;
   input              D0;
   input              D1;
   input              D2;
   input              D3;
   input 	      L;	
   input 	      UP;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;
	else if (L)
	  {Q3, Q2, Q1, Q0} <= {D3, D2, D1, D0};
	else if (CE)
	  begin
	     if (UP)
	       {Q3, Q2, Q1, Q0} <= {Q3, Q2, Q1, Q0} + 1;
	     else if (!UP)
	       {Q3, Q2, Q1, Q0} <= {Q3, Q2, Q1, Q0} - 1;
	  end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ( ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT_UP && UP) || ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT_DOWN && !UP) );
   
endmodule
`timescale 1ns / 1ps

module pc(CE, 
          CLK, 
          CLR, 
          D, 
          LOD, 
          Q);

    input CE;
    input CLK;
    input CLR;
    input [3:0] D;
    input LOD;
   output [3:0] Q;
   
   wire XLXN_8;
   
   (* HU_SET = "XLXI_4_145" *) 
   CB4CLED_HXILINX_pc  XLXI_4 (.C(CLK), 
                              .CE(CE), 
                              .CLR(CLR), 
                              .D0(D[0]), 
                              .D1(D[1]), 
                              .D2(D[2]), 
                              .D3(D[3]), 
                              .L(LOD), 
                              .UP(XLXN_8), 
                              .CEO(), 
                              .Q0(Q[0]), 
                              .Q1(Q[1]), 
                              .Q2(Q[2]), 
                              .Q3(Q[3]), 
                              .TC());
   VCC  XLXI_6 (.P(XLXN_8));
endmodule
