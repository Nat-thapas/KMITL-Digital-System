////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : clkdiv20k.vf
// /___/   /\     Timestamp : 10/01/2024 08:57:49
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Classes-2024/Digital System Fundamentals Shared/Labs/10/simple-cpu/clkdiv20k.vf" -w "D:/Classes-2024/Digital System Fundamentals Shared/Labs/10/simple-cpu/clkdiv20k.sch"
//Design Name: clkdiv20k
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_clkdiv20k(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FTCE_HXILINX_clkdiv20k(Q, C, CE, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;

   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE) 
          if(T)
            Q <= !Q;
     end
   
endmodule
`timescale 1ns / 1ps

module clkdiv20k(CLK, 
                 CEO);

    input CLK;
   output CEO;
   
   wire CLK_I;
   wire XLXN_3;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_27;
   wire XLXN_37;
   wire XLXN_45;
   wire XLXN_49;
   wire XLXN_50;
   
   (* HU_SET = "XLXI_1_0" *) 
   CD4CE_HXILINX_clkdiv20k  XLXI_1 (.C(CLK_I), 
                                   .CE(XLXN_3), 
                                   .CLR(XLXN_15), 
                                   .CEO(XLXN_14), 
                                   .Q0(), 
                                   .Q1(), 
                                   .Q2(), 
                                   .Q3(), 
                                   .TC());
   VCC  XLXI_2 (.P(XLXN_3));
   GND  XLXI_3 (.G(XLXN_15));
   (* HU_SET = "XLXI_14_1" *) 
   CD4CE_HXILINX_clkdiv20k  XLXI_14 (.C(CLK_I), 
                                    .CE(XLXN_14), 
                                    .CLR(XLXN_15), 
                                    .CEO(XLXN_27), 
                                    .Q0(), 
                                    .Q1(), 
                                    .Q2(), 
                                    .Q3(), 
                                    .TC());
   (* HU_SET = "XLXI_17_2" *) 
   CD4CE_HXILINX_clkdiv20k  XLXI_17 (.C(CLK_I), 
                                    .CE(XLXN_27), 
                                    .CLR(XLXN_15), 
                                    .CEO(XLXN_37), 
                                    .Q0(), 
                                    .Q1(), 
                                    .Q2(), 
                                    .Q3(), 
                                    .TC());
   (* HU_SET = "XLXI_22_3" *) 
   CD4CE_HXILINX_clkdiv20k  XLXI_22 (.C(CLK_I), 
                                    .CE(XLXN_37), 
                                    .CLR(XLXN_15), 
                                    .CEO(XLXN_45), 
                                    .Q0(), 
                                    .Q1(), 
                                    .Q2(), 
                                    .Q3(), 
                                    .TC());
   INV  XLXI_34 (.I(CLK), 
                .O(CLK_I));
   (* HU_SET = "XLXI_36_4" *) 
   FTCE_HXILINX_clkdiv20k  XLXI_36 (.C(CLK_I), 
                                   .CE(XLXN_45), 
                                   .CLR(XLXN_15), 
                                   .T(XLXN_49), 
                                   .Q(XLXN_50));
   VCC  XLXI_37 (.P(XLXN_49));
   AND2  XLXI_38 (.I0(XLXN_45), 
                 .I1(XLXN_50), 
                 .O(CEO));
endmodule
