////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ssd4d09b.vf
// /___/   /\     Timestamp : 10/15/2024 14:45:29
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Classes-2024/Digital System Fundamentals Shared/Exam/b07-fibbonacci/ssd4d09b.vf" -w "D:/Classes-2024/Digital System Fundamentals Shared/Exam/b07-fibbonacci/ssd4d09b.sch"
//Design Name: ssd4d09b
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_ssd4d09b (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_ssd4d09b (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_ssd4d09b(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module ssd4d09b(D0, 
                D1, 
                D2, 
                D3, 
                ScanCLK, 
                COM, 
                Segment);

    input [3:0] D0;
    input [3:0] D1;
    input [3:0] D2;
    input [3:0] D3;
    input ScanCLK;
   output [3:0] COM;
   output [6:0] Segment;
   
   wire [3:0] D;
   wire XLXN_109;
   wire XLXN_111;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_117;
   wire XLXN_118;
   wire XLXN_119;
   wire XLXN_125;
   wire XLXN_129;
   wire XLXN_130;
   wire XLXN_131;
   wire XLXN_132;
   wire XLXN_134;
   wire XLXN_135;
   wire XLXN_141;
   wire XLXN_145;
   wire XLXN_146;
   wire XLXN_185;
   wire XLXN_195;
   wire XLXN_199;
   wire XLXN_236;
   wire XLXN_237;
   wire XLXN_238;
   wire XLXN_239;
   wire [6:0] Segment_DUMMY;
   
   assign Segment[6:0] = Segment_DUMMY[6:0];
   AND2  XLXI_92 (.I0(D[0]), 
                 .I1(D[1]), 
                 .O(XLXN_129));
   INV  XLXI_93 (.I(D[1]), 
                .O(XLXN_109));
   INV  XLXI_94 (.I(D[0]), 
                .O(XLXN_111));
   OR2  XLXI_95 (.I0(D[0]), 
                .I1(D[1]), 
                .O(XLXN_118));
   NOR2  XLXI_96 (.I0(D[2]), 
                 .I1(XLXN_109), 
                 .O(XLXN_113));
   AND2  XLXI_97 (.I0(XLXN_109), 
                 .I1(D[2]), 
                 .O(XLXN_114));
   AND2  XLXI_98 (.I0(D[2]), 
                 .I1(XLXN_111), 
                 .O(XLXN_135));
   NOR2  XLXI_99 (.I0(D[0]), 
                 .I1(XLXN_113), 
                 .O(XLXN_131));
   OR2  XLXI_100 (.I0(D[0]), 
                 .I1(XLXN_114), 
                 .O(XLXN_117));
   INV  XLXI_101 (.I(XLXN_117), 
                 .O(Segment_DUMMY[4]));
   NAND2  XLXI_102 (.I0(XLXN_117), 
                   .I1(D[1]), 
                   .O(XLXN_119));
   NAND3  XLXI_103 (.I0(XLXN_118), 
                   .I1(XLXN_119), 
                   .I2(D[2]), 
                   .O(Segment_DUMMY[1]));
   NAND3  XLXI_104 (.I0(Segment_DUMMY[1]), 
                   .I1(D[1]), 
                   .I2(Segment_DUMMY[4]), 
                   .O(Segment_DUMMY[2]));
   NOR2  XLXI_105 (.I0(XLXN_111), 
                  .I1(Segment_DUMMY[1]), 
                  .O(XLXN_125));
   OR2  XLXI_106 (.I0(XLXN_125), 
                 .I1(D[3]), 
                 .O(XLXN_130));
   OR2  XLXI_107 (.I0(XLXN_113), 
                 .I1(XLXN_130), 
                 .O(XLXN_134));
   NOR2  XLXI_108 (.I0(XLXN_129), 
                  .I1(XLXN_130), 
                  .O(XLXN_132));
   OR2  XLXI_109 (.I0(XLXN_135), 
                 .I1(XLXN_134), 
                 .O(Segment_DUMMY[6]));
   OR2  XLXI_110 (.I0(Segment_DUMMY[4]), 
                 .I1(XLXN_134), 
                 .O(Segment_DUMMY[3]));
   NAND2  XLXI_111 (.I0(XLXN_132), 
                   .I1(XLXN_117), 
                   .O(Segment_DUMMY[0]));
   OR2  XLXI_112 (.I0(XLXN_131), 
                 .I1(XLXN_130), 
                 .O(Segment_DUMMY[5]));
   GND  XLXI_119 (.G(XLXN_141));
   (* HU_SET = "XLXI_162_4" *) 
   CB2CE_HXILINX_ssd4d09b  XLXI_162 (.C(ScanCLK), 
                                    .CE(XLXN_145), 
                                    .CLR(XLXN_141), 
                                    .CEO(), 
                                    .Q0(XLXN_195), 
                                    .Q1(XLXN_199), 
                                    .TC());
   VCC  XLXI_163 (.P(XLXN_145));
   VCC  XLXI_165 (.P(XLXN_146));
   (* HU_SET = "XLXI_183_0" *) 
   M4_1E_HXILINX_ssd4d09b  XLXI_183 (.D0(D0[0]), 
                                    .D1(D1[0]), 
                                    .D2(D2[0]), 
                                    .D3(D3[0]), 
                                    .E(XLXN_185), 
                                    .S0(XLXN_195), 
                                    .S1(XLXN_199), 
                                    .O(D[0]));
   (* HU_SET = "XLXI_184_1" *) 
   M4_1E_HXILINX_ssd4d09b  XLXI_184 (.D0(D0[1]), 
                                    .D1(D1[1]), 
                                    .D2(D2[1]), 
                                    .D3(D3[1]), 
                                    .E(XLXN_185), 
                                    .S0(XLXN_195), 
                                    .S1(XLXN_199), 
                                    .O(D[1]));
   (* HU_SET = "XLXI_185_2" *) 
   M4_1E_HXILINX_ssd4d09b  XLXI_185 (.D0(D0[2]), 
                                    .D1(D1[2]), 
                                    .D2(D2[2]), 
                                    .D3(D3[2]), 
                                    .E(XLXN_185), 
                                    .S0(XLXN_195), 
                                    .S1(XLXN_199), 
                                    .O(D[2]));
   (* HU_SET = "XLXI_186_3" *) 
   M4_1E_HXILINX_ssd4d09b  XLXI_186 (.D0(D0[3]), 
                                    .D1(D1[3]), 
                                    .D2(D2[3]), 
                                    .D3(D3[3]), 
                                    .E(XLXN_185), 
                                    .S0(XLXN_195), 
                                    .S1(XLXN_199), 
                                    .O(D[3]));
   VCC  XLXI_204 (.P(XLXN_185));
   (* HU_SET = "XLXI_210_5" *) 
   D2_4E_HXILINX_ssd4d09b  XLXI_210 (.A0(XLXN_195), 
                                    .A1(XLXN_199), 
                                    .E(XLXN_146), 
                                    .D0(XLXN_236), 
                                    .D1(XLXN_237), 
                                    .D2(XLXN_238), 
                                    .D3(XLXN_239));
   INV  XLXI_211 (.I(XLXN_236), 
                 .O(COM[0]));
   INV  XLXI_212 (.I(XLXN_237), 
                 .O(COM[1]));
   INV  XLXI_213 (.I(XLXN_238), 
                 .O(COM[2]));
   INV  XLXI_214 (.I(XLXN_239), 
                 .O(COM[3]));
endmodule
