////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 10/15/2024 14:21:02
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Classes-2024/Digital System Fundamentals Shared/Exam/b05-2text-2you/main.vf" -w "D:/Classes-2024/Digital System Fundamentals Shared/Exam/b05-2text-2you/main.sch"
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M2_1E_HXILINX_main (O, D0, D1, E, S0);
    

   output O;

   input  D0;
   input  D1;
   input  E;
   input  S0;

   reg O;

   always @ ( D0 or D1 or E or S0)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case(S0)
        1'b0 : O <= D0;
        1'b1 : O <= D1;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_main(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale  100 ps / 10 ps

module D3_8E_HXILINX_main (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2, E);
    

   output D0;
   output D1;
   output D2;
   output D3;
   output D4;
   output D5;
   output D6;
   output D7;

   input  A0;
   input  A1;
   input  A2;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;
   reg D4;
   reg D5;
   reg D6;
   reg D7;

      always @ (A0 or A1 or A2 or E)
      begin
         if(!E)
           {D7, D6, D5, D4, D3, D2, D1, D0} <= 8'b0000_0000;
        else
        begin
           case({A2,A1,A0})
             3'b000 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0000_0001;
             3'b001 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0000_0010;
             3'b010 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0000_0100;
             3'b011 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0000_1000;
             3'b100 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0001_0000;
             3'b101 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0010_0000;
             3'b110 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0100_0000;
             3'b111 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b1000_0000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_main (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_main(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_main (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_main(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module clkdiv5_MUSER_main(CLK, 
                          CLKO);

    input CLK;
   output CLKO;
   
   wire XLXN_18;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_38;
   
   (* HU_SET = "XLXI_6_45" *) 
   FJKC_HXILINX_main  XLXI_6 (.C(CLK), 
                             .CLR(XLXN_18), 
                             .J(XLXN_29), 
                             .K(XLXN_28), 
                             .Q(XLXN_34));
   (* HU_SET = "XLXI_7_43" *) 
   FJKC_HXILINX_main  XLXI_7 (.C(CLK), 
                             .CLR(XLXN_18), 
                             .J(XLXN_35), 
                             .K(XLXN_36), 
                             .Q(XLXN_30));
   (* HU_SET = "XLXI_8_44" *) 
   FJKC_HXILINX_main  XLXI_8 (.C(CLK), 
                             .CLR(XLXN_18), 
                             .J(XLXN_30), 
                             .K(XLXN_34), 
                             .Q(XLXN_33));
   GND  XLXI_15 (.G(XLXN_18));
   VCC  XLXI_20 (.P(XLXN_28));
   INV  XLXI_21 (.I(XLXN_30), 
                .O(XLXN_29));
   AND2B1  XLXI_22 (.I0(XLXN_33), 
                   .I1(XLXN_34), 
                   .O(XLXN_35));
   VCC  XLXI_23 (.P(XLXN_36));
   FD_1 #( .INIT(1'b0) ) XLXI_24 (.C(CLK), 
                 .D(XLXN_33), 
                 .Q(XLXN_38));
   OR2  XLXI_25 (.I0(XLXN_38), 
                .I1(XLXN_33), 
                .O(CLKO));
endmodule
`timescale 1ns / 1ps

module clkdiv2M_MUSER_main(CLK, 
                           CLKO);

    input CLK;
   output CLKO;
   
   wire CLK_I;
   wire XLXN_3;
   wire XLXN_9;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_27;
   wire XLXN_37;
   wire XLXN_44;
   wire XLXN_51;
   wire XLXN_53;
   wire CLKO_DUMMY;
   
   assign CLKO = CLKO_DUMMY;
   (* HU_SET = "XLXI_1_46" *) 
   CD4CE_HXILINX_main  XLXI_1 (.C(CLK_I), 
                              .CE(XLXN_3), 
                              .CLR(XLXN_15), 
                              .CEO(XLXN_14), 
                              .Q0(), 
                              .Q1(), 
                              .Q2(), 
                              .Q3(), 
                              .TC());
   VCC  XLXI_2 (.P(XLXN_3));
   GND  XLXI_3 (.G(XLXN_15));
   FD_1 #( .INIT(1'b0) ) XLXI_10 (.C(XLXN_53), 
                 .D(XLXN_9), 
                 .Q(CLKO_DUMMY));
   INV  XLXI_11 (.I(CLKO_DUMMY), 
                .O(XLXN_9));
   (* HU_SET = "XLXI_14_47" *) 
   CD4CE_HXILINX_main  XLXI_14 (.C(CLK_I), 
                               .CE(XLXN_14), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_27), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_17_48" *) 
   CD4CE_HXILINX_main  XLXI_17 (.C(CLK_I), 
                               .CE(XLXN_27), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_37), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_22_49" *) 
   CD4CE_HXILINX_main  XLXI_22 (.C(CLK_I), 
                               .CE(XLXN_37), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_44), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_25_50" *) 
   CD4CE_HXILINX_main  XLXI_25 (.C(CLK_I), 
                               .CE(XLXN_44), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_51), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_28_51" *) 
   CD4CE_HXILINX_main  XLXI_28 (.C(CLK_I), 
                               .CE(XLXN_51), 
                               .CLR(XLXN_15), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_53));
   INV  XLXI_34 (.I(CLK), 
                .O(CLK_I));
endmodule
`timescale 1ns / 1ps

module clkdiv20k_MUSER_main(CLK, 
                            CLKO);

    input CLK;
   output CLKO;
   
   wire CLK_I;
   wire XLXN_3;
   wire XLXN_11;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_27;
   wire XLXN_37;
   wire XLXN_41;
   wire CLKO_DUMMY;
   
   assign CLKO = CLKO_DUMMY;
   (* HU_SET = "XLXI_1_52" *) 
   CD4CE_HXILINX_main  XLXI_1 (.C(CLK_I), 
                              .CE(XLXN_3), 
                              .CLR(XLXN_15), 
                              .CEO(XLXN_14), 
                              .Q0(), 
                              .Q1(), 
                              .Q2(), 
                              .Q3(), 
                              .TC());
   VCC  XLXI_2 (.P(XLXN_3));
   GND  XLXI_3 (.G(XLXN_15));
   FD_1 #( .INIT(1'b0) ) XLXI_10 (.C(XLXN_41), 
                 .D(XLXN_11), 
                 .Q(CLKO_DUMMY));
   INV  XLXI_11 (.I(CLKO_DUMMY), 
                .O(XLXN_11));
   (* HU_SET = "XLXI_14_53" *) 
   CD4CE_HXILINX_main  XLXI_14 (.C(CLK_I), 
                               .CE(XLXN_14), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_27), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_17_54" *) 
   CD4CE_HXILINX_main  XLXI_17 (.C(CLK_I), 
                               .CE(XLXN_27), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_37), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_22_55" *) 
   CD4CE_HXILINX_main  XLXI_22 (.C(CLK_I), 
                               .CE(XLXN_37), 
                               .CLR(XLXN_15), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_41));
   INV  XLXI_34 (.I(CLK), 
                .O(CLK_I));
endmodule
`timescale 1ns / 1ps

module ssd4drpb_MUSER_main(D0, 
                           D1, 
                           D2, 
                           D3, 
                           ScanCLK, 
                           COM, 
                           Segment);

    input [7:0] D0;
    input [7:0] D1;
    input [7:0] D2;
    input [7:0] D3;
    input ScanCLK;
   output [3:0] COM;
   output [7:0] Segment;
   
   wire XLXN_12;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_141;
   wire XLXN_145;
   wire XLXN_146;
   wire XLXN_236;
   wire XLXN_237;
   wire XLXN_238;
   wire XLXN_239;
   
   (* HU_SET = "XLXI_1_56" *) 
   M4_1E_HXILINX_main  XLXI_1 (.D0(D0[0]), 
                              .D1(D1[0]), 
                              .D2(D2[0]), 
                              .D3(D3[0]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[0]));
   (* HU_SET = "XLXI_3_57" *) 
   M4_1E_HXILINX_main  XLXI_3 (.D0(D0[1]), 
                              .D1(D1[1]), 
                              .D2(D2[1]), 
                              .D3(D3[1]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[1]));
   (* HU_SET = "XLXI_4_58" *) 
   M4_1E_HXILINX_main  XLXI_4 (.D0(D0[2]), 
                              .D1(D1[2]), 
                              .D2(D2[2]), 
                              .D3(D3[2]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[2]));
   (* HU_SET = "XLXI_5_59" *) 
   M4_1E_HXILINX_main  XLXI_5 (.D0(D0[3]), 
                              .D1(D1[3]), 
                              .D2(D2[3]), 
                              .D3(D3[3]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[3]));
   (* HU_SET = "XLXI_6_60" *) 
   M4_1E_HXILINX_main  XLXI_6 (.D0(D0[4]), 
                              .D1(D1[4]), 
                              .D2(D2[4]), 
                              .D3(D3[4]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[4]));
   (* HU_SET = "XLXI_7_61" *) 
   M4_1E_HXILINX_main  XLXI_7 (.D0(D0[5]), 
                              .D1(D1[5]), 
                              .D2(D2[5]), 
                              .D3(D3[5]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[5]));
   (* HU_SET = "XLXI_8_62" *) 
   M4_1E_HXILINX_main  XLXI_8 (.D0(D0[6]), 
                              .D1(D1[6]), 
                              .D2(D2[6]), 
                              .D3(D3[6]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[6]));
   (* HU_SET = "XLXI_9_63" *) 
   M4_1E_HXILINX_main  XLXI_9 (.D0(D0[7]), 
                              .D1(D1[7]), 
                              .D2(D2[7]), 
                              .D3(D3[7]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[7]));
   VCC  XLXI_18 (.P(XLXN_12));
   GND  XLXI_119 (.G(XLXN_141));
   (* HU_SET = "XLXI_162_64" *) 
   CB2CE_HXILINX_main  XLXI_162 (.C(ScanCLK), 
                                .CE(XLXN_145), 
                                .CLR(XLXN_141), 
                                .CEO(), 
                                .Q0(XLXN_29), 
                                .Q1(XLXN_28), 
                                .TC());
   VCC  XLXI_163 (.P(XLXN_145));
   VCC  XLXI_165 (.P(XLXN_146));
   (* HU_SET = "XLXI_210_65" *) 
   D2_4E_HXILINX_main  XLXI_210 (.A0(XLXN_29), 
                                .A1(XLXN_28), 
                                .E(XLXN_146), 
                                .D0(XLXN_236), 
                                .D1(XLXN_237), 
                                .D2(XLXN_238), 
                                .D3(XLXN_239));
   INV  XLXI_211 (.I(XLXN_236), 
                 .O(COM[0]));
   INV  XLXI_212 (.I(XLXN_237), 
                 .O(COM[1]));
   INV  XLXI_213 (.I(XLXN_238), 
                 .O(COM[2]));
   INV  XLXI_214 (.I(XLXN_239), 
                 .O(COM[3]));
endmodule
`timescale 1ns / 1ps

module mux2x1x8e_MUSER_main(D0, 
                            D1, 
                            Enable, 
                            S, 
                            O);

    input [7:0] D0;
    input [7:0] D1;
    input Enable;
    input S;
   output [7:0] O;
   
   
   (* HU_SET = "XLXI_13_66" *) 
   M2_1E_HXILINX_main  XLXI_13 (.D0(D0[0]), 
                               .D1(D1[0]), 
                               .E(Enable), 
                               .S0(S), 
                               .O(O[0]));
   (* HU_SET = "XLXI_14_67" *) 
   M2_1E_HXILINX_main  XLXI_14 (.D0(D0[1]), 
                               .D1(D1[1]), 
                               .E(Enable), 
                               .S0(S), 
                               .O(O[1]));
   (* HU_SET = "XLXI_15_68" *) 
   M2_1E_HXILINX_main  XLXI_15 (.D0(D0[2]), 
                               .D1(D1[2]), 
                               .E(Enable), 
                               .S0(S), 
                               .O(O[2]));
   (* HU_SET = "XLXI_16_69" *) 
   M2_1E_HXILINX_main  XLXI_16 (.D0(D0[3]), 
                               .D1(D1[3]), 
                               .E(Enable), 
                               .S0(S), 
                               .O(O[3]));
   (* HU_SET = "XLXI_20_70" *) 
   M2_1E_HXILINX_main  XLXI_20 (.D0(D0[4]), 
                               .D1(D1[4]), 
                               .E(Enable), 
                               .S0(S), 
                               .O(O[4]));
   (* HU_SET = "XLXI_21_71" *) 
   M2_1E_HXILINX_main  XLXI_21 (.D0(D0[5]), 
                               .D1(D1[5]), 
                               .E(Enable), 
                               .S0(S), 
                               .O(O[5]));
   (* HU_SET = "XLXI_22_72" *) 
   M2_1E_HXILINX_main  XLXI_22 (.D0(D0[6]), 
                               .D1(D1[6]), 
                               .E(Enable), 
                               .S0(S), 
                               .O(O[6]));
   (* HU_SET = "XLXI_23_73" *) 
   M2_1E_HXILINX_main  XLXI_23 (.D0(D0[7]), 
                               .D1(D1[7]), 
                               .E(Enable), 
                               .S0(S), 
                               .O(O[7]));
endmodule
`timescale 1ns / 1ps

module wtb8_MUSER_main(I0, 
                       I1, 
                       I2, 
                       I3, 
                       I4, 
                       I5, 
                       I6, 
                       I7, 
                       O);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
    input I6;
    input I7;
   output [7:0] O;
   
   
   BUF  XLXI_1 (.I(I0), 
               .O(O[0]));
   BUF  XLXI_2 (.I(I1), 
               .O(O[1]));
   BUF  XLXI_3 (.I(I2), 
               .O(O[2]));
   BUF  XLXI_4 (.I(I3), 
               .O(O[3]));
   BUF  XLXI_5 (.I(I4), 
               .O(O[4]));
   BUF  XLXI_6 (.I(I5), 
               .O(O[5]));
   BUF  XLXI_7 (.I(I6), 
               .O(O[6]));
   BUF  XLXI_8 (.I(I7), 
               .O(O[7]));
endmodule
`timescale 1ns / 1ps

module main(BTN1, 
            OSC, 
            SSD_COM, 
            SSD_Segment);

    input BTN1;
    input OSC;
   output [3:0] SSD_COM;
   output [7:0] SSD_Segment;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire [7:0] XLXN_65;
   wire [7:0] XLXN_66;
   wire [7:0] XLXN_67;
   wire [7:0] XLXN_68;
   wire [7:0] XLXN_69;
   wire [7:0] XLXN_70;
   wire [7:0] XLXN_71;
   wire [7:0] XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_79;
   wire XLXN_81;
   wire XLXN_83;
   wire XLXN_84;
   wire XLXN_89;
   wire XLXN_95;
   wire XLXN_96;
   wire XLXN_99;
   wire XLXN_100;
   wire XLXN_101;
   wire [7:0] XLXN_102;
   wire [7:0] XLXN_103;
   wire [7:0] XLXN_104;
   wire [7:0] XLXN_105;
   wire XLXN_106;
   wire XLXN_109;
   
   wtb8_MUSER_main  XLXI_1 (.I0(XLXN_1), 
                           .I1(XLXN_42), 
                           .I2(XLXN_2), 
                           .I3(XLXN_3), 
                           .I4(XLXN_4), 
                           .I5(XLXN_5), 
                           .I6(XLXN_6), 
                           .I7(XLXN_43), 
                           .O(XLXN_65[7:0]));
   wtb8_MUSER_main  XLXI_2 (.I0(XLXN_7), 
                           .I1(XLXN_44), 
                           .I2(XLXN_8), 
                           .I3(XLXN_9), 
                           .I4(XLXN_10), 
                           .I5(XLXN_11), 
                           .I6(XLXN_12), 
                           .I7(XLXN_45), 
                           .O(XLXN_66[7:0]));
   wtb8_MUSER_main  XLXI_3 (.I0(XLXN_13), 
                           .I1(XLXN_46), 
                           .I2(XLXN_47), 
                           .I3(XLXN_14), 
                           .I4(XLXN_15), 
                           .I5(XLXN_16), 
                           .I6(XLXN_17), 
                           .I7(XLXN_48), 
                           .O(XLXN_67[7:0]));
   wtb8_MUSER_main  XLXI_7 (.I0(XLXN_18), 
                           .I1(XLXN_49), 
                           .I2(XLXN_50), 
                           .I3(XLXN_19), 
                           .I4(XLXN_20), 
                           .I5(XLXN_21), 
                           .I6(XLXN_51), 
                           .I7(XLXN_52), 
                           .O(XLXN_68[7:0]));
   wtb8_MUSER_main  XLXI_8 (.I0(XLXN_53), 
                           .I1(XLXN_22), 
                           .I2(XLXN_23), 
                           .I3(XLXN_24), 
                           .I4(XLXN_25), 
                           .I5(XLXN_26), 
                           .I6(XLXN_54), 
                           .I7(XLXN_55), 
                           .O(XLXN_69[7:0]));
   wtb8_MUSER_main  XLXI_9 (.I0(XLXN_27), 
                           .I1(XLXN_56), 
                           .I2(XLXN_28), 
                           .I3(XLXN_29), 
                           .I4(XLXN_57), 
                           .I5(XLXN_30), 
                           .I6(XLXN_31), 
                           .I7(XLXN_58), 
                           .O(XLXN_70[7:0]));
   wtb8_MUSER_main  XLXI_10 (.I0(XLXN_59), 
                            .I1(XLXN_32), 
                            .I2(XLXN_33), 
                            .I3(XLXN_34), 
                            .I4(XLXN_35), 
                            .I5(XLXN_36), 
                            .I6(XLXN_60), 
                            .I7(XLXN_61), 
                            .O(XLXN_71[7:0]));
   wtb8_MUSER_main  XLXI_11 (.I0(XLXN_37), 
                            .I1(XLXN_62), 
                            .I2(XLXN_38), 
                            .I3(XLXN_39), 
                            .I4(XLXN_63), 
                            .I5(XLXN_40), 
                            .I6(XLXN_41), 
                            .I7(XLXN_64), 
                            .O(XLXN_72[7:0]));
   VCC  XLXI_16 (.P(XLXN_1));
   VCC  XLXI_17 (.P(XLXN_2));
   VCC  XLXI_18 (.P(XLXN_3));
   VCC  XLXI_19 (.P(XLXN_4));
   VCC  XLXI_21 (.P(XLXN_5));
   VCC  XLXI_22 (.P(XLXN_6));
   VCC  XLXI_23 (.P(XLXN_7));
   VCC  XLXI_24 (.P(XLXN_8));
   VCC  XLXI_25 (.P(XLXN_9));
   VCC  XLXI_26 (.P(XLXN_10));
   VCC  XLXI_27 (.P(XLXN_11));
   VCC  XLXI_28 (.P(XLXN_12));
   VCC  XLXI_29 (.P(XLXN_13));
   VCC  XLXI_30 (.P(XLXN_14));
   VCC  XLXI_31 (.P(XLXN_15));
   VCC  XLXI_32 (.P(XLXN_16));
   VCC  XLXI_33 (.P(XLXN_17));
   VCC  XLXI_34 (.P(XLXN_18));
   VCC  XLXI_35 (.P(XLXN_19));
   VCC  XLXI_36 (.P(XLXN_20));
   VCC  XLXI_37 (.P(XLXN_21));
   VCC  XLXI_38 (.P(XLXN_22));
   VCC  XLXI_39 (.P(XLXN_23));
   VCC  XLXI_40 (.P(XLXN_24));
   VCC  XLXI_41 (.P(XLXN_25));
   VCC  XLXI_42 (.P(XLXN_26));
   VCC  XLXI_43 (.P(XLXN_27));
   VCC  XLXI_44 (.P(XLXN_28));
   VCC  XLXI_45 (.P(XLXN_29));
   VCC  XLXI_46 (.P(XLXN_30));
   VCC  XLXI_47 (.P(XLXN_31));
   VCC  XLXI_48 (.P(XLXN_32));
   VCC  XLXI_49 (.P(XLXN_33));
   VCC  XLXI_50 (.P(XLXN_34));
   VCC  XLXI_51 (.P(XLXN_35));
   VCC  XLXI_52 (.P(XLXN_36));
   VCC  XLXI_53 (.P(XLXN_37));
   VCC  XLXI_54 (.P(XLXN_38));
   VCC  XLXI_55 (.P(XLXN_39));
   VCC  XLXI_56 (.P(XLXN_40));
   VCC  XLXI_57 (.P(XLXN_41));
   GND  XLXI_58 (.G(XLXN_42));
   GND  XLXI_59 (.G(XLXN_43));
   GND  XLXI_60 (.G(XLXN_44));
   GND  XLXI_61 (.G(XLXN_45));
   GND  XLXI_62 (.G(XLXN_46));
   GND  XLXI_63 (.G(XLXN_47));
   GND  XLXI_64 (.G(XLXN_48));
   GND  XLXI_65 (.G(XLXN_49));
   GND  XLXI_66 (.G(XLXN_50));
   GND  XLXI_67 (.G(XLXN_51));
   GND  XLXI_68 (.G(XLXN_52));
   GND  XLXI_69 (.G(XLXN_53));
   GND  XLXI_71 (.G(XLXN_54));
   GND  XLXI_73 (.G(XLXN_55));
   GND  XLXI_74 (.G(XLXN_56));
   GND  XLXI_75 (.G(XLXN_57));
   GND  XLXI_76 (.G(XLXN_58));
   GND  XLXI_77 (.G(XLXN_59));
   GND  XLXI_78 (.G(XLXN_60));
   GND  XLXI_80 (.G(XLXN_61));
   GND  XLXI_81 (.G(XLXN_62));
   GND  XLXI_82 (.G(XLXN_63));
   GND  XLXI_83 (.G(XLXN_64));
   mux2x1x8e_MUSER_main  XLXI_84 (.D0(XLXN_65[7:0]), 
                                 .D1(XLXN_69[7:0]), 
                                 .Enable(XLXN_95), 
                                 .S(XLXN_96), 
                                 .O(XLXN_102[7:0]));
   mux2x1x8e_MUSER_main  XLXI_85 (.D0(XLXN_66[7:0]), 
                                 .D1(XLXN_70[7:0]), 
                                 .Enable(XLXN_95), 
                                 .S(XLXN_96), 
                                 .O(XLXN_103[7:0]));
   mux2x1x8e_MUSER_main  XLXI_86 (.D0(XLXN_67[7:0]), 
                                 .D1(XLXN_71[7:0]), 
                                 .Enable(XLXN_95), 
                                 .S(XLXN_96), 
                                 .O(XLXN_104[7:0]));
   mux2x1x8e_MUSER_main  XLXI_87 (.D0(XLXN_68[7:0]), 
                                 .D1(XLXN_72[7:0]), 
                                 .Enable(XLXN_95), 
                                 .S(XLXN_96), 
                                 .O(XLXN_105[7:0]));
   (* HU_SET = "XLXI_88_74" *) 
   CD4CE_HXILINX_main  XLXI_88 (.C(XLXN_79), 
                               .CE(XLXN_95), 
                               .CLR(XLXN_81), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(XLXN_73), 
                               .Q2(XLXN_74), 
                               .Q3(XLXN_75), 
                               .TC(XLXN_84));
   (* HU_SET = "XLXI_89_75" *) 
   D3_8E_HXILINX_main  XLXI_89 (.A0(XLXN_73), 
                               .A1(XLXN_74), 
                               .A2(XLXN_75), 
                               .E(XLXN_95), 
                               .D0(), 
                               .D1(), 
                               .D2(XLXN_101), 
                               .D3(XLXN_100), 
                               .D4(XLXN_99), 
                               .D5(), 
                               .D6(), 
                               .D7());
   (* HU_SET = "XLXI_90_76" *) 
   FJKC_HXILINX_main  XLXI_90 (.C(OSC), 
                              .CLR(XLXN_89), 
                              .J(BTN1), 
                              .K(XLXN_83), 
                              .Q(XLXN_95));
   GND  XLXI_92 (.G(XLXN_81));
   FD #( .INIT(1'b0) ) XLXI_93 (.C(XLXN_79), 
               .D(XLXN_84), 
               .Q(XLXN_83));
   GND  XLXI_94 (.G(XLXN_89));
   OR3  XLXI_96 (.I0(XLXN_99), 
                .I1(XLXN_100), 
                .I2(XLXN_101), 
                .O(XLXN_96));
   ssd4drpb_MUSER_main  XLXI_97 (.D0(XLXN_102[7:0]), 
                                .D1(XLXN_103[7:0]), 
                                .D2(XLXN_104[7:0]), 
                                .D3(XLXN_105[7:0]), 
                                .ScanCLK(XLXN_106), 
                                .COM(SSD_COM[3:0]), 
                                .Segment(SSD_Segment[7:0]));
   clkdiv20k_MUSER_main  XLXI_98 (.CLK(OSC), 
                                 .CLKO(XLXN_106));
   clkdiv2M_MUSER_main  XLXI_99 (.CLK(OSC), 
                                .CLKO(XLXN_109));
   clkdiv5_MUSER_main  XLXI_100 (.CLK(XLXN_109), 
                                .CLKO(XLXN_79));
endmodule
