////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 10/12/2024 15:36:47
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Classes-2024/Digital System Fundamentals Shared/Practice/b09-a-z/main.vf" -w "D:/Classes-2024/Digital System Fundamentals Shared/Practice/b09-a-z/main.sch"
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKCE_HXILINX_main(Q, C, CE, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE)
        begin
          if(!J)
          begin
            if(K)
            Q <= 1'b0;
          end
          else
          begin
            if(!K)
            Q <= 1'b1;
            else 
            Q <= !Q;
          end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module FJKPE_HXILINX_main(Q, C, CE, J, K, PRE);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input              J;
   input              K;
   input 	      PRE;	
   
   parameter INIT = 1'b1;
   reg                Q = INIT;

  
  always @(posedge C or posedge PRE)
     begin
	if (PRE)
	  Q <= 1'b1;
	else if(CE)
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_main(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_main (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_main(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_main (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_main (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_main(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FTPE_HXILINX_main(Q, C, CE, PRE, T);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      PRE;	
   input              T;
   
  
   parameter INIT = 1'b1;
   reg                Q = INIT;

   always @(posedge C or posedge PRE)
     begin
	if (PRE)
	  Q <= 1'b1;
        else if (CE)
	  if(T)
          Q <= !Q;
     end
   
endmodule
`timescale 1ns / 1ps

module clkdiv20k_MUSER_main(CLK, 
                            CLKO);

    input CLK;
   output CLKO;
   
   wire CLK_I;
   wire XLXN_3;
   wire XLXN_11;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_27;
   wire XLXN_37;
   wire XLXN_41;
   wire CLKO_DUMMY;
   
   assign CLKO = CLKO_DUMMY;
   (* HU_SET = "XLXI_1_0" *) 
   CD4CE_HXILINX_main  XLXI_1 (.C(CLK_I), 
                              .CE(XLXN_3), 
                              .CLR(XLXN_15), 
                              .CEO(XLXN_14), 
                              .Q0(), 
                              .Q1(), 
                              .Q2(), 
                              .Q3(), 
                              .TC());
   VCC  XLXI_2 (.P(XLXN_3));
   GND  XLXI_3 (.G(XLXN_15));
   FD_1 #( .INIT(1'b0) ) XLXI_10 (.C(XLXN_41), 
                 .D(XLXN_11), 
                 .Q(CLKO_DUMMY));
   INV  XLXI_11 (.I(CLKO_DUMMY), 
                .O(XLXN_11));
   (* HU_SET = "XLXI_14_1" *) 
   CD4CE_HXILINX_main  XLXI_14 (.C(CLK_I), 
                               .CE(XLXN_14), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_27), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_17_2" *) 
   CD4CE_HXILINX_main  XLXI_17 (.C(CLK_I), 
                               .CE(XLXN_27), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_37), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_22_3" *) 
   CD4CE_HXILINX_main  XLXI_22 (.C(CLK_I), 
                               .CE(XLXN_37), 
                               .CLR(XLXN_15), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_41));
   INV  XLXI_34 (.I(CLK), 
                .O(CLK_I));
endmodule
`timescale 1ns / 1ps

module ssd4drpb_MUSER_main(D0, 
                           D1, 
                           D2, 
                           D3, 
                           ScanCLK, 
                           COM, 
                           Segment);

    input [7:0] D0;
    input [7:0] D1;
    input [7:0] D2;
    input [7:0] D3;
    input ScanCLK;
   output [3:0] COM;
   output [7:0] Segment;
   
   wire XLXN_12;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_141;
   wire XLXN_145;
   wire XLXN_146;
   wire XLXN_236;
   wire XLXN_237;
   wire XLXN_238;
   wire XLXN_239;
   
   (* HU_SET = "XLXI_1_4" *) 
   M4_1E_HXILINX_main  XLXI_1 (.D0(D0[0]), 
                              .D1(D1[0]), 
                              .D2(D2[0]), 
                              .D3(D3[0]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[0]));
   (* HU_SET = "XLXI_3_5" *) 
   M4_1E_HXILINX_main  XLXI_3 (.D0(D0[1]), 
                              .D1(D1[1]), 
                              .D2(D2[1]), 
                              .D3(D3[1]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[1]));
   (* HU_SET = "XLXI_4_6" *) 
   M4_1E_HXILINX_main  XLXI_4 (.D0(D0[2]), 
                              .D1(D1[2]), 
                              .D2(D2[2]), 
                              .D3(D3[2]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[2]));
   (* HU_SET = "XLXI_5_7" *) 
   M4_1E_HXILINX_main  XLXI_5 (.D0(D0[3]), 
                              .D1(D1[3]), 
                              .D2(D2[3]), 
                              .D3(D3[3]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[3]));
   (* HU_SET = "XLXI_6_8" *) 
   M4_1E_HXILINX_main  XLXI_6 (.D0(D0[4]), 
                              .D1(D1[4]), 
                              .D2(D2[4]), 
                              .D3(D3[4]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[4]));
   (* HU_SET = "XLXI_7_9" *) 
   M4_1E_HXILINX_main  XLXI_7 (.D0(D0[5]), 
                              .D1(D1[5]), 
                              .D2(D2[5]), 
                              .D3(D3[5]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[5]));
   (* HU_SET = "XLXI_8_10" *) 
   M4_1E_HXILINX_main  XLXI_8 (.D0(D0[6]), 
                              .D1(D1[6]), 
                              .D2(D2[6]), 
                              .D3(D3[6]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[6]));
   (* HU_SET = "XLXI_9_11" *) 
   M4_1E_HXILINX_main  XLXI_9 (.D0(D0[7]), 
                              .D1(D1[7]), 
                              .D2(D2[7]), 
                              .D3(D3[7]), 
                              .E(XLXN_12), 
                              .S0(XLXN_29), 
                              .S1(XLXN_28), 
                              .O(Segment[7]));
   VCC  XLXI_18 (.P(XLXN_12));
   GND  XLXI_119 (.G(XLXN_141));
   (* HU_SET = "XLXI_162_12" *) 
   CB2CE_HXILINX_main  XLXI_162 (.C(ScanCLK), 
                                .CE(XLXN_145), 
                                .CLR(XLXN_141), 
                                .CEO(), 
                                .Q0(XLXN_29), 
                                .Q1(XLXN_28), 
                                .TC());
   VCC  XLXI_163 (.P(XLXN_145));
   VCC  XLXI_165 (.P(XLXN_146));
   (* HU_SET = "XLXI_210_13" *) 
   D2_4E_HXILINX_main  XLXI_210 (.A0(XLXN_29), 
                                .A1(XLXN_28), 
                                .E(XLXN_146), 
                                .D0(XLXN_236), 
                                .D1(XLXN_237), 
                                .D2(XLXN_238), 
                                .D3(XLXN_239));
   INV  XLXI_211 (.I(XLXN_236), 
                 .O(COM[0]));
   INV  XLXI_212 (.I(XLXN_237), 
                 .O(COM[1]));
   INV  XLXI_213 (.I(XLXN_238), 
                 .O(COM[2]));
   INV  XLXI_214 (.I(XLXN_239), 
                 .O(COM[3]));
endmodule
`timescale 1ns / 1ps

module mux2x1x8_MUSER_main(D0, 
                           D1, 
                           S, 
                           O);

    input [7:0] D0;
    input [7:0] D1;
    input S;
   output [7:0] O;
   
   
   (* HU_SET = "XLXI_1_14" *) 
   M2_1_HXILINX_main  XLXI_1 (.D0(D0[0]), 
                             .D1(D1[0]), 
                             .S0(S), 
                             .O(O[0]));
   (* HU_SET = "XLXI_2_15" *) 
   M2_1_HXILINX_main  XLXI_2 (.D0(D0[1]), 
                             .D1(D1[1]), 
                             .S0(S), 
                             .O(O[1]));
   (* HU_SET = "XLXI_7_16" *) 
   M2_1_HXILINX_main  XLXI_7 (.D0(D0[2]), 
                             .D1(D1[2]), 
                             .S0(S), 
                             .O(O[2]));
   (* HU_SET = "XLXI_8_17" *) 
   M2_1_HXILINX_main  XLXI_8 (.D0(D0[3]), 
                             .D1(D1[3]), 
                             .S0(S), 
                             .O(O[3]));
   (* HU_SET = "XLXI_9_18" *) 
   M2_1_HXILINX_main  XLXI_9 (.D0(D0[4]), 
                             .D1(D1[4]), 
                             .S0(S), 
                             .O(O[4]));
   (* HU_SET = "XLXI_10_19" *) 
   M2_1_HXILINX_main  XLXI_10 (.D0(D0[5]), 
                              .D1(D1[5]), 
                              .S0(S), 
                              .O(O[5]));
   (* HU_SET = "XLXI_11_20" *) 
   M2_1_HXILINX_main  XLXI_11 (.D0(D0[6]), 
                              .D1(D1[6]), 
                              .S0(S), 
                              .O(O[6]));
   (* HU_SET = "XLXI_12_21" *) 
   M2_1_HXILINX_main  XLXI_12 (.D0(D0[7]), 
                              .D1(D1[7]), 
                              .S0(S), 
                              .O(O[7]));
endmodule
`timescale 1ns / 1ps

module resize7x8x0l_MUSER_main(L, 
                               O);

    input [6:0] L;
   output [7:0] O;
   
   
   BUF  XLXI_1 (.I(L[0]), 
               .O(O[0]));
   BUF  XLXI_2 (.I(L[1]), 
               .O(O[1]));
   BUF  XLXI_3 (.I(L[2]), 
               .O(O[2]));
   BUF  XLXI_4 (.I(L[3]), 
               .O(O[3]));
   GND  XLXI_34 (.G(O[7]));
   BUF  XLXI_35 (.I(L[4]), 
                .O(O[4]));
   BUF  XLXI_36 (.I(L[5]), 
                .O(O[5]));
   BUF  XLXI_37 (.I(L[6]), 
                .O(O[6]));
endmodule
`timescale 1ns / 1ps

module ssd1d_ztb_MUSER_main(A, 
                            Segment);

    input [4:0] A;
   output [6:0] Segment;
   
   
   LUT5 #( .INIT(32'h040FE0EA) ) XLXI_1 (.I0(A[0]), 
                .I1(A[1]), 
                .I2(A[2]), 
                .I3(A[3]), 
                .I4(A[4]), 
                .O(Segment[0]));
   LUT5 #( .INIT(32'h07A3C792) ) XLXI_2 (.I0(A[0]), 
                .I1(A[1]), 
                .I2(A[2]), 
                .I3(A[3]), 
                .I4(A[4]), 
                .O(Segment[1]));
   LUT5 #( .INIT(32'h036AE796) ) XLXI_3 (.I0(A[0]), 
                .I1(A[1]), 
                .I2(A[2]), 
                .I3(A[3]), 
                .I4(A[4]), 
                .O(Segment[2]));
   LUT5 #( .INIT(32'h06F894BC) ) XLXI_5 (.I0(A[0]), 
                .I1(A[1]), 
                .I2(A[2]), 
                .I3(A[3]), 
                .I4(A[4]), 
                .O(Segment[3]));
   LUT5 #( .INIT(32'h0475F97E) ) XLXI_6 (.I0(A[0]), 
                .I1(A[1]), 
                .I2(A[2]), 
                .I3(A[3]), 
                .I4(A[4]), 
                .O(Segment[4]));
   LUT5 #( .INIT(32'h02BFD9EE) ) XLXI_7 (.I0(A[0]), 
                .I1(A[1]), 
                .I2(A[2]), 
                .I3(A[3]), 
                .I4(A[4]), 
                .O(Segment[5]));
   LUT5 #( .INIT(32'h071B09F6) ) XLXI_8 (.I0(A[0]), 
                .I1(A[1]), 
                .I2(A[2]), 
                .I3(A[3]), 
                .I4(A[4]), 
                .O(Segment[6]));
endmodule
`timescale 1ns / 1ps

module counters1_MUSER_main(CE, 
                            CLK, 
                            CLR, 
                            CEO, 
                            Q0, 
                            Q1, 
                            TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output TC;
   
   wire Q2;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_22" *) 
   FJKCE_HXILINX_main  FlipFlop_A (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(Q2), 
                                  .K(XLXN_1), 
                                  .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_23" *) 
   FJKCE_HXILINX_main  FlipFlop_B (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(Q0_DUMMY), 
                                  .K(XLXN_2), 
                                  .Q(Q1_DUMMY));
   (* HU_SET = "FlipFlop_C_24" *) 
   FJKCE_HXILINX_main  FlipFlop_C (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_4), 
                                  .K(XLXN_3), 
                                  .Q(Q2));
   VCC  XLXI_1 (.P(XLXN_1));
   VCC  XLXI_2 (.P(XLXN_2));
   VCC  XLXI_3 (.P(XLXN_3));
   AND2  XLXI_4 (.I0(XLXN_5), 
                .I1(XLXN_6), 
                .O(XLXN_4));
   INV  XLXI_5 (.I(Q0_DUMMY), 
               .O(XLXN_5));
   INV  XLXI_6 (.I(Q1_DUMMY), 
               .O(XLXN_6));
   AND3  XLXI_7 (.I0(XLXN_7), 
                .I1(Q1_DUMMY), 
                .I2(XLXN_8), 
                .O(TC_DUMMY));
   INV  XLXI_8 (.I(Q0_DUMMY), 
               .O(XLXN_7));
   INV  XLXI_9 (.I(Q2), 
               .O(XLXN_8));
   AND2  XLXI_10 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module counters0_MUSER_main(CE, 
                            CLK, 
                            CLR, 
                            CEO, 
                            Q0, 
                            Q1, 
                            TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_25" *) 
   FJKCE_HXILINX_main  FlipFlop_A (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_2), 
                                  .K(XLXN_1), 
                                  .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_26" *) 
   FJKCE_HXILINX_main  FlipFlop_B (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(Q0_DUMMY), 
                                  .K(Q0_DUMMY), 
                                  .Q(Q1_DUMMY));
   VCC  XLXI_1 (.P(XLXN_1));
   VCC  XLXI_2 (.P(XLXN_2));
   AND2  XLXI_3 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(TC_DUMMY));
   AND2  XLXI_4 (.I0(CE), 
                .I1(TC_DUMMY), 
                .O(CEO));
endmodule
`timescale 1ns / 1ps

module counterm3_MUSER_main(CE, 
                            CLK, 
                            CLR, 
                            CEO, 
                            Q0, 
                            Q1, 
                            Q2, 
                            Q3, 
                            Q4, 
                            TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output Q4;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   wire Q4_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   assign Q4 = Q4_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_27" *) 
   FJKCE_HXILINX_main  FlipFlop_A (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_2), 
                                  .K(XLXN_1), 
                                  .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_28" *) 
   FJKCE_HXILINX_main  FlipFlop_B (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(Q0_DUMMY), 
                                  .K(XLXN_6), 
                                  .Q(Q1_DUMMY));
   (* HU_SET = "FlipFlop_C_29" *) 
   FJKCE_HXILINX_main  FlipFlop_C (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_9), 
                                  .K(XLXN_8), 
                                  .Q(Q2_DUMMY));
   (* HU_SET = "FlipFlop_D_30" *) 
   FJKCE_HXILINX_main  FlipFlop_D (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_13), 
                                  .K(XLXN_10), 
                                  .Q(Q3_DUMMY));
   (* HU_SET = "FlipFlop_E_31" *) 
   FJKCE_HXILINX_main  FlipFlop_E (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_15), 
                                  .K(XLXN_14), 
                                  .Q(Q4_DUMMY));
   VCC  XLXI_1 (.P(XLXN_1));
   OR3  XLXI_2 (.I0(XLXN_3), 
               .I1(XLXN_4), 
               .I2(XLXN_5), 
               .O(XLXN_2));
   INV  XLXI_3 (.I(Q1_DUMMY), 
               .O(XLXN_3));
   INV  XLXI_4 (.I(Q3_DUMMY), 
               .O(XLXN_4));
   INV  XLXI_5 (.I(Q4_DUMMY), 
               .O(XLXN_5));
   OR2  XLXI_6 (.I0(Q0_DUMMY), 
               .I1(XLXN_7), 
               .O(XLXN_6));
   AND2  XLXI_7 (.I0(Q3_DUMMY), 
                .I1(Q4_DUMMY), 
                .O(XLXN_7));
   AND2  XLXI_8 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_8));
   AND2  XLXI_9 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_9));
   OR2  XLXI_10 (.I0(XLXN_11), 
                .I1(XLXN_12), 
                .O(XLXN_10));
   AND2  XLXI_11 (.I0(Q1_DUMMY), 
                 .I1(Q4_DUMMY), 
                 .O(XLXN_11));
   AND3  XLXI_12 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_12));
   AND3  XLXI_13 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_13));
   AND2  XLXI_14 (.I0(Q1_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .O(XLXN_14));
   AND4  XLXI_15 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .I3(Q3_DUMMY), 
                 .O(XLXN_15));
   AND5  XLXI_16 (.I0(XLXN_16), 
                 .I1(Q1_DUMMY), 
                 .I2(XLXN_17), 
                 .I3(Q3_DUMMY), 
                 .I4(Q4_DUMMY), 
                 .O(TC_DUMMY));
   INV  XLXI_17 (.I(Q0_DUMMY), 
                .O(XLXN_16));
   INV  XLXI_18 (.I(Q2_DUMMY), 
                .O(XLXN_17));
   AND2  XLXI_19 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module counterm2_MUSER_main(CE, 
                            CLK, 
                            CLR, 
                            CEO, 
                            Q0, 
                            Q1, 
                            Q2, 
                            Q3, 
                            Q4, 
                            TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output Q4;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   wire Q4_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   assign Q4 = Q4_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_32" *) 
   FJKPE_HXILINX_main  FlipFlop_A (.C(CLK), 
                                  .CE(CE), 
                                  .J(XLXN_2), 
                                  .K(XLXN_1), 
                                  .PRE(CLR), 
                                  .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_33" *) 
   FJKCE_HXILINX_main  FlipFlop_B (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(Q0_DUMMY), 
                                  .K(XLXN_6), 
                                  .Q(Q1_DUMMY));
   (* HU_SET = "FlipFlop_C_34" *) 
   FJKCE_HXILINX_main  FlipFlop_C (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_9), 
                                  .K(XLXN_8), 
                                  .Q(Q2_DUMMY));
   (* HU_SET = "FlipFlop_D_35" *) 
   FJKCE_HXILINX_main  FlipFlop_D (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_13), 
                                  .K(XLXN_10), 
                                  .Q(Q3_DUMMY));
   (* HU_SET = "FlipFlop_E_36" *) 
   FJKCE_HXILINX_main  FlipFlop_E (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_15), 
                                  .K(XLXN_14), 
                                  .Q(Q4_DUMMY));
   VCC  XLXI_1 (.P(XLXN_1));
   OR3  XLXI_2 (.I0(XLXN_3), 
               .I1(XLXN_4), 
               .I2(XLXN_5), 
               .O(XLXN_2));
   INV  XLXI_3 (.I(Q1_DUMMY), 
               .O(XLXN_3));
   INV  XLXI_4 (.I(Q3_DUMMY), 
               .O(XLXN_4));
   INV  XLXI_5 (.I(Q4_DUMMY), 
               .O(XLXN_5));
   OR2  XLXI_6 (.I0(Q0_DUMMY), 
               .I1(XLXN_7), 
               .O(XLXN_6));
   AND2  XLXI_7 (.I0(Q3_DUMMY), 
                .I1(Q4_DUMMY), 
                .O(XLXN_7));
   AND2  XLXI_8 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_8));
   AND2  XLXI_9 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_9));
   OR2  XLXI_10 (.I0(XLXN_11), 
                .I1(XLXN_12), 
                .O(XLXN_10));
   AND2  XLXI_11 (.I0(Q1_DUMMY), 
                 .I1(Q4_DUMMY), 
                 .O(XLXN_11));
   AND3  XLXI_12 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_12));
   AND3  XLXI_13 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_13));
   AND2  XLXI_14 (.I0(Q1_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .O(XLXN_14));
   AND4  XLXI_15 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .I3(Q3_DUMMY), 
                 .O(XLXN_15));
   AND5  XLXI_16 (.I0(XLXN_16), 
                 .I1(XLXN_17), 
                 .I2(XLXN_18), 
                 .I3(XLXN_19), 
                 .I4(XLXN_20), 
                 .O(TC_DUMMY));
   INV  XLXI_17 (.I(Q0_DUMMY), 
                .O(XLXN_16));
   INV  XLXI_18 (.I(Q1_DUMMY), 
                .O(XLXN_17));
   INV  XLXI_19 (.I(Q2_DUMMY), 
                .O(XLXN_18));
   INV  XLXI_20 (.I(Q3_DUMMY), 
                .O(XLXN_19));
   INV  XLXI_21 (.I(Q4_DUMMY), 
                .O(XLXN_20));
   AND2  XLXI_22 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module counterm1_MUSER_main(CE, 
                            CLK, 
                            CLR, 
                            CEO, 
                            Q0, 
                            Q1, 
                            Q2, 
                            Q3, 
                            Q4, 
                            TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output Q4;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   wire Q4_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   assign Q4 = Q4_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_37" *) 
   FJKCE_HXILINX_main  FlipFlop_A (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_2), 
                                  .K(XLXN_1), 
                                  .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_38" *) 
   FJKPE_HXILINX_main  FlipFlop_B (.C(CLK), 
                                  .CE(CE), 
                                  .J(Q0_DUMMY), 
                                  .K(XLXN_6), 
                                  .PRE(CLR), 
                                  .Q(Q1_DUMMY));
   (* HU_SET = "FlipFlop_C_39" *) 
   FJKCE_HXILINX_main  FlipFlop_C (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_9), 
                                  .K(XLXN_8), 
                                  .Q(Q2_DUMMY));
   (* HU_SET = "FlipFlop_D_40" *) 
   FJKCE_HXILINX_main  FlipFlop_D (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_13), 
                                  .K(XLXN_10), 
                                  .Q(Q3_DUMMY));
   (* HU_SET = "FlipFlop_E_41" *) 
   FJKCE_HXILINX_main  FlipFlop_E (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_15), 
                                  .K(XLXN_14), 
                                  .Q(Q4_DUMMY));
   VCC  XLXI_1 (.P(XLXN_1));
   OR3  XLXI_2 (.I0(XLXN_3), 
               .I1(XLXN_4), 
               .I2(XLXN_5), 
               .O(XLXN_2));
   INV  XLXI_3 (.I(Q1_DUMMY), 
               .O(XLXN_3));
   INV  XLXI_4 (.I(Q3_DUMMY), 
               .O(XLXN_4));
   INV  XLXI_5 (.I(Q4_DUMMY), 
               .O(XLXN_5));
   OR2  XLXI_6 (.I0(Q0_DUMMY), 
               .I1(XLXN_7), 
               .O(XLXN_6));
   AND2  XLXI_7 (.I0(Q3_DUMMY), 
                .I1(Q4_DUMMY), 
                .O(XLXN_7));
   AND2  XLXI_8 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_8));
   AND2  XLXI_9 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_9));
   OR2  XLXI_10 (.I0(XLXN_11), 
                .I1(XLXN_12), 
                .O(XLXN_10));
   AND2  XLXI_11 (.I0(Q1_DUMMY), 
                 .I1(Q4_DUMMY), 
                 .O(XLXN_11));
   AND3  XLXI_12 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_12));
   AND3  XLXI_13 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_13));
   AND2  XLXI_14 (.I0(Q1_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .O(XLXN_14));
   AND4  XLXI_15 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .I3(Q3_DUMMY), 
                 .O(XLXN_15));
   AND5  XLXI_16 (.I0(Q0_DUMMY), 
                 .I1(XLXN_16), 
                 .I2(XLXN_17), 
                 .I3(XLXN_18), 
                 .I4(XLXN_19), 
                 .O(TC_DUMMY));
   INV  XLXI_17 (.I(Q1_DUMMY), 
                .O(XLXN_16));
   INV  XLXI_18 (.I(Q2_DUMMY), 
                .O(XLXN_17));
   INV  XLXI_19 (.I(Q3_DUMMY), 
                .O(XLXN_18));
   INV  XLXI_20 (.I(Q4_DUMMY), 
                .O(XLXN_19));
   AND2  XLXI_21 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module counterm0_MUSER_main(CE, 
                            CLK, 
                            CLR, 
                            CEO, 
                            Q0, 
                            Q1, 
                            Q2, 
                            Q3, 
                            Q4, 
                            TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output Q4;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   wire Q4_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   assign Q4 = Q4_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_42" *) 
   FJKPE_HXILINX_main  FlipFlop_A (.C(CLK), 
                                  .CE(CE), 
                                  .J(XLXN_2), 
                                  .K(XLXN_1), 
                                  .PRE(CLR), 
                                  .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_43" *) 
   FJKPE_HXILINX_main  FlipFlop_B (.C(CLK), 
                                  .CE(CE), 
                                  .J(Q0_DUMMY), 
                                  .K(XLXN_6), 
                                  .PRE(CLR), 
                                  .Q(Q1_DUMMY));
   (* HU_SET = "FlipFlop_C_44" *) 
   FJKCE_HXILINX_main  FlipFlop_C (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_9), 
                                  .K(XLXN_8), 
                                  .Q(Q2_DUMMY));
   (* HU_SET = "FlipFlop_D_45" *) 
   FJKCE_HXILINX_main  FlipFlop_D (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_13), 
                                  .K(XLXN_10), 
                                  .Q(Q3_DUMMY));
   (* HU_SET = "FlipFlop_E_46" *) 
   FJKCE_HXILINX_main  FlipFlop_E (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_15), 
                                  .K(XLXN_14), 
                                  .Q(Q4_DUMMY));
   VCC  XLXI_1 (.P(XLXN_1));
   OR3  XLXI_2 (.I0(XLXN_3), 
               .I1(XLXN_4), 
               .I2(XLXN_5), 
               .O(XLXN_2));
   INV  XLXI_3 (.I(Q1_DUMMY), 
               .O(XLXN_3));
   INV  XLXI_4 (.I(Q3_DUMMY), 
               .O(XLXN_4));
   INV  XLXI_5 (.I(Q4_DUMMY), 
               .O(XLXN_5));
   OR2  XLXI_6 (.I0(Q0_DUMMY), 
               .I1(XLXN_7), 
               .O(XLXN_6));
   AND2  XLXI_7 (.I0(Q3_DUMMY), 
                .I1(Q4_DUMMY), 
                .O(XLXN_7));
   AND2  XLXI_8 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_8));
   AND2  XLXI_9 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_9));
   OR2  XLXI_10 (.I0(XLXN_11), 
                .I1(XLXN_12), 
                .O(XLXN_10));
   AND2  XLXI_11 (.I0(Q1_DUMMY), 
                 .I1(Q4_DUMMY), 
                 .O(XLXN_11));
   AND3  XLXI_12 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_12));
   AND3  XLXI_13 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_13));
   AND2  XLXI_14 (.I0(Q1_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .O(XLXN_14));
   AND4  XLXI_15 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .I3(Q3_DUMMY), 
                 .O(XLXN_15));
   AND5  XLXI_16 (.I0(XLXN_16), 
                 .I1(Q1_DUMMY), 
                 .I2(XLXN_17), 
                 .I3(XLXN_18), 
                 .I4(XLXN_19), 
                 .O(TC_DUMMY));
   INV  XLXI_17 (.I(Q0_DUMMY), 
                .O(XLXN_16));
   INV  XLXI_18 (.I(Q2_DUMMY), 
                .O(XLXN_17));
   INV  XLXI_19 (.I(Q3_DUMMY), 
                .O(XLXN_18));
   INV  XLXI_20 (.I(Q4_DUMMY), 
                .O(XLXN_19));
   AND2  XLXI_21 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module clkdiv200k_MUSER_main(CLK, 
                             CLKO);

    input CLK;
   output CLKO;
   
   wire CLK_I;
   wire XLXN_3;
   wire XLXN_9;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_27;
   wire XLXN_37;
   wire XLXN_44;
   wire XLXN_48;
   wire CLKO_DUMMY;
   
   assign CLKO = CLKO_DUMMY;
   (* HU_SET = "XLXI_1_47" *) 
   CD4CE_HXILINX_main  XLXI_1 (.C(CLK_I), 
                              .CE(XLXN_3), 
                              .CLR(XLXN_15), 
                              .CEO(XLXN_14), 
                              .Q0(), 
                              .Q1(), 
                              .Q2(), 
                              .Q3(), 
                              .TC());
   VCC  XLXI_2 (.P(XLXN_3));
   GND  XLXI_3 (.G(XLXN_15));
   FD_1 #( .INIT(1'b0) ) XLXI_10 (.C(XLXN_48), 
                 .D(XLXN_9), 
                 .Q(CLKO_DUMMY));
   INV  XLXI_11 (.I(CLKO_DUMMY), 
                .O(XLXN_9));
   (* HU_SET = "XLXI_14_48" *) 
   CD4CE_HXILINX_main  XLXI_14 (.C(CLK_I), 
                               .CE(XLXN_14), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_27), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_17_49" *) 
   CD4CE_HXILINX_main  XLXI_17 (.C(CLK_I), 
                               .CE(XLXN_27), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_37), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_22_50" *) 
   CD4CE_HXILINX_main  XLXI_22 (.C(CLK_I), 
                               .CE(XLXN_37), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_44), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_25_51" *) 
   CD4CE_HXILINX_main  XLXI_25 (.C(CLK_I), 
                               .CE(XLXN_44), 
                               .CLR(XLXN_15), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_48));
   INV  XLXI_34 (.I(CLK), 
                .O(CLK_I));
endmodule
`timescale 1ns / 1ps

module clkdiv5_MUSER_main(CLK, 
                          CLKO);

    input CLK;
   output CLKO;
   
   wire XLXN_18;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_38;
   
   (* HU_SET = "XLXI_6_54" *) 
   FJKC_HXILINX_main  XLXI_6 (.C(CLK), 
                             .CLR(XLXN_18), 
                             .J(XLXN_29), 
                             .K(XLXN_28), 
                             .Q(XLXN_34));
   (* HU_SET = "XLXI_7_52" *) 
   FJKC_HXILINX_main  XLXI_7 (.C(CLK), 
                             .CLR(XLXN_18), 
                             .J(XLXN_35), 
                             .K(XLXN_36), 
                             .Q(XLXN_30));
   (* HU_SET = "XLXI_8_53" *) 
   FJKC_HXILINX_main  XLXI_8 (.C(CLK), 
                             .CLR(XLXN_18), 
                             .J(XLXN_30), 
                             .K(XLXN_34), 
                             .Q(XLXN_33));
   GND  XLXI_15 (.G(XLXN_18));
   VCC  XLXI_20 (.P(XLXN_28));
   INV  XLXI_21 (.I(XLXN_30), 
                .O(XLXN_29));
   AND2B1  XLXI_22 (.I0(XLXN_33), 
                   .I1(XLXN_34), 
                   .O(XLXN_35));
   VCC  XLXI_23 (.P(XLXN_36));
   FD_1 #( .INIT(1'b0) ) XLXI_24 (.C(CLK), 
                 .D(XLXN_33), 
                 .Q(XLXN_38));
   OR2  XLXI_25 (.I0(XLXN_38), 
                .I1(XLXN_33), 
                .O(CLKO));
endmodule
`timescale 1ns / 1ps

module edetect_MUSER_main(CLK, 
                          I, 
                          CEO);

    input CLK;
    input I;
   output CEO;
   
   wire XLXN_5;
   wire XLXN_6;
   
   FD #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
              .D(I), 
              .Q(XLXN_6));
   FD #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
              .D(XLXN_6), 
              .Q(XLXN_5));
   AND2B1  XLXI_5 (.I0(XLXN_5), 
                  .I1(XLXN_6), 
                  .O(CEO));
endmodule
`timescale 1ns / 1ps

module main(BTN1, 
            OSC, 
            SSD_COM, 
            SSD_Segment);

    input BTN1;
    input OSC;
   output [3:0] SSD_COM;
   output [7:0] SSD_Segment;
   
   wire [4:0] CA;
   wire [4:0] CB;
   wire [4:0] CC;
   wire [4:0] CD;
   wire [4:0] SA;
   wire [4:0] SB;
   wire [4:0] SC;
   wire [4:0] SD;
   wire XLXN_1;
   wire XLXN_5;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_44;
   wire XLXN_46;
   wire XLXN_48;
   wire XLXN_58;
   wire XLXN_73;
   wire XLXN_113;
   wire XLXN_121;
   wire [6:0] XLXN_173;
   wire [6:0] XLXN_174;
   wire [6:0] XLXN_175;
   wire [6:0] XLXN_176;
   wire [6:0] XLXN_177;
   wire [6:0] XLXN_178;
   wire [6:0] XLXN_179;
   wire [6:0] XLXN_180;
   wire [7:0] XLXN_196;
   wire [7:0] XLXN_197;
   wire [7:0] XLXN_198;
   wire [7:0] XLXN_199;
   wire [7:0] XLXN_200;
   wire [7:0] XLXN_201;
   wire [7:0] XLXN_202;
   wire [7:0] XLXN_203;
   wire [7:0] XLXN_213;
   wire [7:0] XLXN_215;
   wire [7:0] XLXN_216;
   wire [7:0] XLXN_217;
   wire XLXN_220;
   wire XLXN_222;
   
   edetect_MUSER_main  XLXI_3 (.CLK(OSC), 
                              .I(BTN1), 
                              .CEO(XLXN_1));
   VCC  XLXI_6 (.P(XLXN_5));
   GND  XLXI_15 (.G(SD[3]));
   GND  XLXI_16 (.G(SD[2]));
   GND  XLXI_17 (.G(SD[1]));
   GND  XLXI_18 (.G(SD[0]));
   GND  XLXI_19 (.G(SC[3]));
   GND  XLXI_20 (.G(SC[2]));
   GND  XLXI_21 (.G(SC[1]));
   GND  XLXI_22 (.G(SC[0]));
   GND  XLXI_23 (.G(SB[3]));
   GND  XLXI_25 (.G(SB[2]));
   GND  XLXI_27 (.G(SA[3]));
   GND  XLXI_28 (.G(SA[2]));
   clkdiv5_MUSER_main  XLXI_47 (.CLK(OSC), 
                               .CLKO(XLXN_38));
   clkdiv5_MUSER_main  XLXI_48 (.CLK(XLXN_38), 
                               .CLKO(XLXN_39));
   clkdiv200k_MUSER_main  XLXI_49 (.CLK(XLXN_39), 
                                  .CLKO(XLXN_48));
   GND  XLXI_51 (.G(XLXN_46));
   counterm0_MUSER_main  XLXI_56 (.CE(XLXN_121), 
                                 .CLK(XLXN_48), 
                                 .CLR(XLXN_58), 
                                 .CEO(), 
                                 .Q0(CA[0]), 
                                 .Q1(CA[1]), 
                                 .Q2(CA[2]), 
                                 .Q3(CA[3]), 
                                 .Q4(CA[4]), 
                                 .TC());
   counterm1_MUSER_main  XLXI_57 (.CE(XLXN_121), 
                                 .CLK(XLXN_48), 
                                 .CLR(XLXN_58), 
                                 .CEO(), 
                                 .Q0(CB[0]), 
                                 .Q1(CB[1]), 
                                 .Q2(CB[2]), 
                                 .Q3(CB[3]), 
                                 .Q4(CB[4]), 
                                 .TC());
   counterm2_MUSER_main  XLXI_58 (.CE(XLXN_121), 
                                 .CLK(XLXN_48), 
                                 .CLR(XLXN_58), 
                                 .CEO(), 
                                 .Q0(CC[0]), 
                                 .Q1(CC[1]), 
                                 .Q2(CC[2]), 
                                 .Q3(CC[3]), 
                                 .Q4(CC[4]), 
                                 .TC());
   counterm3_MUSER_main  XLXI_59 (.CE(XLXN_121), 
                                 .CLK(XLXN_48), 
                                 .CLR(XLXN_58), 
                                 .CEO(), 
                                 .Q0(CD[0]), 
                                 .Q1(CD[1]), 
                                 .Q2(CD[2]), 
                                 .Q3(CD[3]), 
                                 .Q4(CD[4]), 
                                 .TC());
   GND  XLXI_60 (.G(XLXN_58));
   AND2B1  XLXI_61 (.I0(XLXN_222), 
                   .I1(XLXN_73), 
                   .O(XLXN_44));
   ssd4drpb_MUSER_main  XLXI_78 (.D0(XLXN_217[7:0]), 
                                .D1(XLXN_216[7:0]), 
                                .D2(XLXN_215[7:0]), 
                                .D3(XLXN_213[7:0]), 
                                .ScanCLK(XLXN_113), 
                                .COM(SSD_COM[3:0]), 
                                .Segment(SSD_Segment[7:0]));
   clkdiv20k_MUSER_main  XLXI_79 (.CLK(OSC), 
                                 .CLKO(XLXN_113));
   counters0_MUSER_main  XLXI_80 (.CE(XLXN_44), 
                                 .CLK(XLXN_48), 
                                 .CLR(XLXN_46), 
                                 .CEO(), 
                                 .Q0(SA[0]), 
                                 .Q1(SA[1]), 
                                 .TC());
   counters1_MUSER_main  XLXI_81 (.CE(XLXN_44), 
                                 .CLK(XLXN_48), 
                                 .CLR(XLXN_46), 
                                 .CEO(), 
                                 .Q0(SB[0]), 
                                 .Q1(SB[1]), 
                                 .TC(XLXN_222));
   AND2  XLXI_82 (.I0(XLXN_222), 
                 .I1(XLXN_73), 
                 .O(XLXN_121));
   ssd1d_ztb_MUSER_main  XLXI_85 (.A(CA[4:0]), 
                                 .Segment(XLXN_177[6:0]));
   ssd1d_ztb_MUSER_main  XLXI_86 (.A(CB[4:0]), 
                                 .Segment(XLXN_178[6:0]));
   ssd1d_ztb_MUSER_main  XLXI_87 (.A(CC[4:0]), 
                                 .Segment(XLXN_179[6:0]));
   ssd1d_ztb_MUSER_main  XLXI_88 (.A(CD[4:0]), 
                                 .Segment(XLXN_180[6:0]));
   ssd1d_ztb_MUSER_main  XLXI_90 (.A(SA[4:0]), 
                                 .Segment(XLXN_173[6:0]));
   ssd1d_ztb_MUSER_main  XLXI_91 (.A(SB[4:0]), 
                                 .Segment(XLXN_174[6:0]));
   ssd1d_ztb_MUSER_main  XLXI_92 (.A(SC[4:0]), 
                                 .Segment(XLXN_175[6:0]));
   ssd1d_ztb_MUSER_main  XLXI_93 (.A(SD[4:0]), 
                                 .Segment(XLXN_176[6:0]));
   GND  XLXI_94 (.G(SD[4]));
   GND  XLXI_95 (.G(SC[4]));
   GND  XLXI_96 (.G(SB[4]));
   GND  XLXI_98 (.G(SA[4]));
   resize7x8x0l_MUSER_main  XLXI_99 (.L(XLXN_173[6:0]), 
                                    .O(XLXN_199[7:0]));
   resize7x8x0l_MUSER_main  XLXI_101 (.L(XLXN_174[6:0]), 
                                     .O(XLXN_198[7:0]));
   resize7x8x0l_MUSER_main  XLXI_102 (.L(XLXN_175[6:0]), 
                                     .O(XLXN_197[7:0]));
   resize7x8x0l_MUSER_main  XLXI_103 (.L(XLXN_176[6:0]), 
                                     .O(XLXN_196[7:0]));
   resize7x8x0l_MUSER_main  XLXI_104 (.L(XLXN_177[6:0]), 
                                     .O(XLXN_200[7:0]));
   resize7x8x0l_MUSER_main  XLXI_105 (.L(XLXN_178[6:0]), 
                                     .O(XLXN_201[7:0]));
   resize7x8x0l_MUSER_main  XLXI_106 (.L(XLXN_179[6:0]), 
                                     .O(XLXN_202[7:0]));
   resize7x8x0l_MUSER_main  XLXI_107 (.L(XLXN_180[6:0]), 
                                     .O(XLXN_203[7:0]));
   mux2x1x8_MUSER_main  XLXI_109 (.D0(XLXN_199[7:0]), 
                                 .D1(XLXN_200[7:0]), 
                                 .S(XLXN_222), 
                                 .O(XLXN_217[7:0]));
   mux2x1x8_MUSER_main  XLXI_110 (.D0(XLXN_198[7:0]), 
                                 .D1(XLXN_201[7:0]), 
                                 .S(XLXN_222), 
                                 .O(XLXN_216[7:0]));
   mux2x1x8_MUSER_main  XLXI_111 (.D0(XLXN_197[7:0]), 
                                 .D1(XLXN_202[7:0]), 
                                 .S(XLXN_222), 
                                 .O(XLXN_215[7:0]));
   mux2x1x8_MUSER_main  XLXI_112 (.D0(XLXN_196[7:0]), 
                                 .D1(XLXN_203[7:0]), 
                                 .S(XLXN_222), 
                                 .O(XLXN_213[7:0]));
   (* HU_SET = "XLXI_115_55" *) 
   FTPE_HXILINX_main  XLXI_115 (.C(OSC), 
                               .CE(XLXN_1), 
                               .PRE(XLXN_220), 
                               .T(XLXN_5), 
                               .Q(XLXN_73));
   GND  XLXI_116 (.G(XLXN_220));
endmodule
