////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 10/12/2024 13:40:20
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Classes-2024/Digital System Fundamentals Shared/Practice/b04-88-counter/main.vf" -w "D:/Classes-2024/Digital System Fundamentals Shared/Practice/b04-88-counter/main.sch"
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKCE_HXILINX_main(Q, C, CE, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE)
        begin
          if(!J)
          begin
            if(K)
            Q <= 1'b0;
          end
          else
          begin
            if(!K)
            Q <= 1'b1;
            else 
            Q <= !Q;
          end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module FTC_HXILINX_main(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_main(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FTCE_HXILINX_main(Q, C, CE, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;

   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE) 
          if(T)
            Q <= !Q;
     end
   
endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_main (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale  100 ps / 10 ps

module AND8_HXILINX_main (O, I0, I1, I2, I3, I4, I5, I6, I7);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;
   input I6;
   input I7;

assign O = I0 && I1 && I2 && I3 && I4 && I5 && I6 && I7;

endmodule
`timescale 1ns / 1ps

module counter88_MUSER_main(CE, 
                            CLK, 
                            CLR, 
                            CEO, 
                            Q0, 
                            Q1, 
                            Q2, 
                            Q3, 
                            Q4, 
                            Q5, 
                            Q6, 
                            Q7, 
                            TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output Q4;
   output Q5;
   output Q6;
   output Q7;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   wire Q4_DUMMY;
   wire Q5_DUMMY;
   wire Q6_DUMMY;
   wire Q7_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   assign Q4 = Q4_DUMMY;
   assign Q5 = Q5_DUMMY;
   assign Q6 = Q6_DUMMY;
   assign Q7 = Q7_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_31" *) 
   FJKCE_HXILINX_main  FlipFlop_A (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_2), 
                                  .K(XLXN_1), 
                                  .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_32" *) 
   FJKCE_HXILINX_main  FlipFlop_B (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_5), 
                                  .K(Q0_DUMMY), 
                                  .Q(Q1_DUMMY));
   (* HU_SET = "FlipFlop_C_33" *) 
   FJKCE_HXILINX_main  FlipFlop_C (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_8), 
                                  .K(XLXN_7), 
                                  .Q(Q2_DUMMY));
   (* HU_SET = "FlipFlop_D_34" *) 
   FJKCE_HXILINX_main  FlipFlop_D (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_10), 
                                  .K(XLXN_9), 
                                  .Q(Q3_DUMMY));
   (* HU_SET = "FlipFlop_E_35" *) 
   FJKCE_HXILINX_main  FlipFlop_E (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_12), 
                                  .K(XLXN_11), 
                                  .Q(Q4_DUMMY));
   (* HU_SET = "FlipFlop_F_36" *) 
   FJKCE_HXILINX_main  FlipFlop_F (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_14), 
                                  .K(XLXN_13), 
                                  .Q(Q5_DUMMY));
   (* HU_SET = "FlipFlop_G_37" *) 
   FJKCE_HXILINX_main  FlipFlop_G (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_16), 
                                  .K(XLXN_15), 
                                  .Q(Q6_DUMMY));
   (* HU_SET = "FlipFlop_H_38" *) 
   FJKCE_HXILINX_main  FlipFlop_H (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_17), 
                                  .K(Q3_DUMMY), 
                                  .Q(Q7_DUMMY));
   VCC  XLXI_1 (.P(XLXN_1));
   OR2  XLXI_2 (.I0(XLXN_3), 
               .I1(XLXN_4), 
               .O(XLXN_2));
   INV  XLXI_3 (.I(Q3_DUMMY), 
               .O(XLXN_3));
   INV  XLXI_4 (.I(Q7_DUMMY), 
               .O(XLXN_4));
   AND2  XLXI_5 (.I0(Q0_DUMMY), 
                .I1(XLXN_6), 
                .O(XLXN_5));
   INV  XLXI_6 (.I(Q3_DUMMY), 
               .O(XLXN_6));
   AND2  XLXI_7 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_7));
   AND2  XLXI_8 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_8));
   OR2  XLXI_9 (.I0(Q0_DUMMY), 
               .I1(Q7_DUMMY), 
               .O(XLXN_9));
   AND3  XLXI_10 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_10));
   AND2  XLXI_11 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .O(XLXN_11));
   AND2  XLXI_12 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .O(XLXN_12));
   AND3  XLXI_13 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .O(XLXN_13));
   AND3  XLXI_14 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .O(XLXN_14));
   AND4  XLXI_15 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .I3(Q5_DUMMY), 
                 .O(XLXN_15));
   AND4  XLXI_16 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .I3(Q5_DUMMY), 
                 .O(XLXN_16));
   AND5  XLXI_17 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .I3(Q5_DUMMY), 
                 .I4(Q6_DUMMY), 
                 .O(XLXN_17));
   (* HU_SET = "XLXI_18_39" *) 
   AND8_HXILINX_main  XLXI_18 (.I0(XLXN_18), 
                              .I1(XLXN_19), 
                              .I2(XLXN_20), 
                              .I3(Q3_DUMMY), 
                              .I4(XLXN_21), 
                              .I5(XLXN_22), 
                              .I6(XLXN_23), 
                              .I7(Q7_DUMMY), 
                              .O(TC_DUMMY));
   INV  XLXI_19 (.I(Q0_DUMMY), 
                .O(XLXN_18));
   INV  XLXI_20 (.I(Q1_DUMMY), 
                .O(XLXN_19));
   INV  XLXI_21 (.I(Q2_DUMMY), 
                .O(XLXN_20));
   INV  XLXI_22 (.I(Q4_DUMMY), 
                .O(XLXN_21));
   INV  XLXI_23 (.I(Q5_DUMMY), 
                .O(XLXN_22));
   INV  XLXI_24 (.I(Q6_DUMMY), 
                .O(XLXN_23));
   AND2  XLXI_25 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module clkdiv20k_MUSER_main(CLK, 
                            CLKO);

    input CLK;
   output CLKO;
   
   wire CLK_I;
   wire XLXN_3;
   wire XLXN_11;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_27;
   wire XLXN_37;
   wire XLXN_41;
   wire CLKO_DUMMY;
   
   assign CLKO = CLKO_DUMMY;
   (* HU_SET = "XLXI_1_40" *) 
   CD4CE_HXILINX_main  XLXI_1 (.C(CLK_I), 
                              .CE(XLXN_3), 
                              .CLR(XLXN_15), 
                              .CEO(XLXN_14), 
                              .Q0(), 
                              .Q1(), 
                              .Q2(), 
                              .Q3(), 
                              .TC());
   VCC  XLXI_2 (.P(XLXN_3));
   GND  XLXI_3 (.G(XLXN_15));
   FD_1 #( .INIT(1'b0) ) XLXI_10 (.C(XLXN_41), 
                 .D(XLXN_11), 
                 .Q(CLKO_DUMMY));
   INV  XLXI_11 (.I(CLKO_DUMMY), 
                .O(XLXN_11));
   (* HU_SET = "XLXI_14_41" *) 
   CD4CE_HXILINX_main  XLXI_14 (.C(CLK_I), 
                               .CE(XLXN_14), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_27), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_17_42" *) 
   CD4CE_HXILINX_main  XLXI_17 (.C(CLK_I), 
                               .CE(XLXN_27), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_37), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_22_43" *) 
   CD4CE_HXILINX_main  XLXI_22 (.C(CLK_I), 
                               .CE(XLXN_37), 
                               .CLR(XLXN_15), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_41));
   INV  XLXI_34 (.I(CLK), 
                .O(CLK_I));
endmodule
`timescale 1ns / 1ps

module edetect_MUSER_main(CLK, 
                          I, 
                          CEO);

    input CLK;
    input I;
   output CEO;
   
   wire XLXN_5;
   wire XLXN_6;
   
   FD #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
              .D(I), 
              .Q(XLXN_6));
   FD #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
              .D(XLXN_6), 
              .Q(XLXN_5));
   AND2B1  XLXI_5 (.I0(XLXN_5), 
                  .I1(XLXN_6), 
                  .O(CEO));
endmodule
`timescale 1ns / 1ps

module ssd2d0ftb_MUSER_main(D0, 
                            D1, 
                            ScanCLK, 
                            COM, 
                            Segment);

    input [3:0] D0;
    input [3:0] D1;
    input ScanCLK;
   output [1:0] COM;
   output [6:0] Segment;
   
   wire [3:0] D;
   wire XLXN_139;
   wire XLXN_141;
   wire [1:0] COM_DUMMY;
   
   assign COM[1:0] = COM_DUMMY[1:0];
   LUT4 #( .INIT(16'hEF7C) ) XLXI_1 (.I0(D[0]), 
                .I1(D[1]), 
                .I2(D[2]), 
                .I3(D[3]), 
                .O(Segment[6]));
   LUT4 #( .INIT(16'hDF71) ) XLXI_2 (.I0(D[0]), 
                .I1(D[1]), 
                .I2(D[2]), 
                .I3(D[3]), 
                .O(Segment[5]));
   LUT4 #( .INIT(16'hFD45) ) XLXI_3 (.I0(D[0]), 
                .I1(D[1]), 
                .I2(D[2]), 
                .I3(D[3]), 
                .O(Segment[4]));
   LUT4 #( .INIT(16'h7B6D) ) XLXI_4 (.I0(D[0]), 
                .I1(D[1]), 
                .I2(D[2]), 
                .I3(D[3]), 
                .O(Segment[3]));
   LUT4 #( .INIT(16'h2FFB) ) XLXI_5 (.I0(D[0]), 
                .I1(D[1]), 
                .I2(D[2]), 
                .I3(D[3]), 
                .O(Segment[2]));
   LUT4 #( .INIT(16'h279F) ) XLXI_6 (.I0(D[0]), 
                .I1(D[1]), 
                .I2(D[2]), 
                .I3(D[3]), 
                .O(Segment[1]));
   LUT4 #( .INIT(16'hD7ED) ) XLXI_7 (.I0(D[0]), 
                .I1(D[1]), 
                .I2(D[2]), 
                .I3(D[3]), 
                .O(Segment[0]));
   VCC  XLXI_118 (.P(XLXN_139));
   GND  XLXI_119 (.G(XLXN_141));
   INV  XLXI_156 (.I(COM_DUMMY[0]), 
                 .O(COM_DUMMY[1]));
   (* HU_SET = "XLXI_158_44" *) 
   M2_1_HXILINX_main  XLXI_158 (.D0(D0[0]), 
                               .D1(D1[0]), 
                               .S0(COM_DUMMY[0]), 
                               .O(D[0]));
   (* HU_SET = "XLXI_159_45" *) 
   M2_1_HXILINX_main  XLXI_159 (.D0(D0[1]), 
                               .D1(D1[1]), 
                               .S0(COM_DUMMY[0]), 
                               .O(D[1]));
   (* HU_SET = "XLXI_160_46" *) 
   M2_1_HXILINX_main  XLXI_160 (.D0(D0[2]), 
                               .D1(D1[2]), 
                               .S0(COM_DUMMY[0]), 
                               .O(D[2]));
   (* HU_SET = "XLXI_161_47" *) 
   M2_1_HXILINX_main  XLXI_161 (.D0(D0[3]), 
                               .D1(D1[3]), 
                               .S0(COM_DUMMY[0]), 
                               .O(D[3]));
   (* HU_SET = "XLXI_162_48" *) 
   FTC_HXILINX_main  XLXI_162 (.C(ScanCLK), 
                              .CLR(XLXN_141), 
                              .T(XLXN_139), 
                              .Q(COM_DUMMY[0]));
endmodule
`timescale 1ns / 1ps

module wtb4_MUSER_main(I0, 
                       I1, 
                       I2, 
                       I3, 
                       O);

    input I0;
    input I1;
    input I2;
    input I3;
   output [3:0] O;
   
   
   BUF  XLXI_1 (.I(I0), 
               .O(O[0]));
   BUF  XLXI_2 (.I(I1), 
               .O(O[1]));
   BUF  XLXI_3 (.I(I2), 
               .O(O[2]));
   BUF  XLXI_4 (.I(I3), 
               .O(O[3]));
endmodule
`timescale 1ns / 1ps

module main(BTN1, 
            BTN2, 
            OSC, 
            LED1, 
            SSD_COM0, 
            SSD_COM1, 
            SSD_COM2, 
            SSD_COM3, 
            SSD_Segment);

    input BTN1;
    input BTN2;
    input OSC;
   output LED1;
   output SSD_COM0;
   output SSD_COM1;
   output SSD_COM2;
   output SSD_COM3;
   output [6:0] SSD_Segment;
   
   wire [1:0] COM;
   wire XLXN_1;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_13;
   wire XLXN_22;
   wire XLXN_25;
   wire [3:0] XLXN_45;
   wire XLXN_46;
   wire XLXN_89;
   wire [3:0] XLXN_92;
   wire XLXN_95;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_98;
   wire XLXN_99;
   wire XLXN_100;
   wire XLXN_101;
   wire XLXN_102;
   wire XLXN_104;
   wire XLXN_107;
   
   INV  XLXI_2 (.I(XLXN_1), 
               .O(XLXN_89));
   (* HU_SET = "XLXI_6_49" *) 
   CD4CE_HXILINX_main  XLXI_6 (.C(XLXN_89), 
                              .CE(XLXN_5), 
                              .CLR(XLXN_13), 
                              .CEO(XLXN_6), 
                              .Q0(), 
                              .Q1(), 
                              .Q2(), 
                              .Q3(), 
                              .TC());
   (* HU_SET = "XLXI_7_50" *) 
   CD4CE_HXILINX_main  XLXI_7 (.C(XLXN_89), 
                              .CE(XLXN_25), 
                              .CLR(XLXN_13), 
                              .CEO(XLXN_5), 
                              .Q0(), 
                              .Q1(), 
                              .Q2(), 
                              .Q3(), 
                              .TC());
   (* HU_SET = "XLXI_8_51" *) 
   CD4CE_HXILINX_main  XLXI_8 (.C(XLXN_89), 
                              .CE(XLXN_6), 
                              .CLR(XLXN_13), 
                              .CEO(XLXN_7), 
                              .Q0(), 
                              .Q1(), 
                              .Q2(), 
                              .Q3(), 
                              .TC());
   GND  XLXI_13 (.G(XLXN_22));
   AND2B1  XLXI_17 (.I0(XLXN_25), 
                   .I1(BTN2), 
                   .O(XLXN_13));
   wtb4_MUSER_main  XLXI_19 (.I0(XLXN_99), 
                            .I1(XLXN_100), 
                            .I2(XLXN_101), 
                            .I3(XLXN_102), 
                            .O(XLXN_92[3:0]));
   wtb4_MUSER_main  XLXI_20 (.I0(XLXN_95), 
                            .I1(XLXN_96), 
                            .I2(XLXN_97), 
                            .I3(XLXN_98), 
                            .O(XLXN_45[3:0]));
   ssd2d0ftb_MUSER_main  XLXI_21 (.D0(XLXN_45[3:0]), 
                                 .D1(XLXN_92[3:0]), 
                                 .ScanCLK(XLXN_46), 
                                 .COM(COM[1:0]), 
                                 .Segment(SSD_Segment[6:0]));
   clkdiv20k_MUSER_main  XLXI_22 (.CLK(OSC), 
                                 .CLKO(XLXN_46));
   BUF  XLXI_23 (.I(COM[0]), 
                .O(SSD_COM0));
   BUF  XLXI_24 (.I(COM[1]), 
                .O(SSD_COM3));
   VCC  XLXI_25 (.P(SSD_COM1));
   VCC  XLXI_26 (.P(SSD_COM2));
   (* HU_SET = "XLXI_44_52" *) 
   FTCE_HXILINX_main  XLXI_44 (.C(OSC), 
                              .CE(XLXN_104), 
                              .CLR(XLXN_22), 
                              .T(XLXN_107), 
                              .Q(XLXN_25));
   edetect_MUSER_main  XLXI_45 (.CLK(OSC), 
                               .I(BTN1), 
                               .CEO(XLXN_104));
   VCC  XLXI_46 (.P(XLXN_107));
   clkdiv20k_MUSER_main  XLXI_48 (.CLK(OSC), 
                                 .CLKO(XLXN_1));
   AND4B1  XLXI_49 (.I0(XLXN_98), 
                   .I1(XLXN_97), 
                   .I2(XLXN_96), 
                   .I3(XLXN_95), 
                   .O(LED1));
   counter88_MUSER_main  XLXI_50 (.CE(XLXN_7), 
                                 .CLK(XLXN_89), 
                                 .CLR(XLXN_13), 
                                 .CEO(), 
                                 .Q0(XLXN_95), 
                                 .Q1(XLXN_96), 
                                 .Q2(XLXN_97), 
                                 .Q3(XLXN_98), 
                                 .Q4(XLXN_99), 
                                 .Q5(XLXN_100), 
                                 .Q6(XLXN_101), 
                                 .Q7(XLXN_102), 
                                 .TC());
endmodule
