////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : counter88.vf
// /___/   /\     Timestamp : 10/12/2024 13:40:20
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Classes-2024/Digital System Fundamentals Shared/Practice/b04-88-counter/counter88.vf" -w "D:/Classes-2024/Digital System Fundamentals Shared/Practice/b04-88-counter/counter88.sch"
//Design Name: counter88
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKCE_HXILINX_counter88(Q, C, CE, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE)
        begin
          if(!J)
          begin
            if(K)
            Q <= 1'b0;
          end
          else
          begin
            if(!K)
            Q <= 1'b1;
            else 
            Q <= !Q;
          end
        end
     end
   
endmodule
`timescale  100 ps / 10 ps

module AND8_HXILINX_counter88 (O, I0, I1, I2, I3, I4, I5, I6, I7);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;
   input I6;
   input I7;

assign O = I0 && I1 && I2 && I3 && I4 && I5 && I6 && I7;

endmodule
`timescale 1ns / 1ps

module counter88(CE, 
                 CLK, 
                 CLR, 
                 CEO, 
                 Q0, 
                 Q1, 
                 Q2, 
                 Q3, 
                 Q4, 
                 Q5, 
                 Q6, 
                 Q7, 
                 TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output Q4;
   output Q5;
   output Q6;
   output Q7;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   wire Q4_DUMMY;
   wire Q5_DUMMY;
   wire Q6_DUMMY;
   wire Q7_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   assign Q4 = Q4_DUMMY;
   assign Q5 = Q5_DUMMY;
   assign Q6 = Q6_DUMMY;
   assign Q7 = Q7_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_22" *) 
   FJKCE_HXILINX_counter88  FlipFlop_A (.C(CLK), 
                                       .CE(CE), 
                                       .CLR(CLR), 
                                       .J(XLXN_2), 
                                       .K(XLXN_1), 
                                       .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_23" *) 
   FJKCE_HXILINX_counter88  FlipFlop_B (.C(CLK), 
                                       .CE(CE), 
                                       .CLR(CLR), 
                                       .J(XLXN_5), 
                                       .K(Q0_DUMMY), 
                                       .Q(Q1_DUMMY));
   (* HU_SET = "FlipFlop_C_24" *) 
   FJKCE_HXILINX_counter88  FlipFlop_C (.C(CLK), 
                                       .CE(CE), 
                                       .CLR(CLR), 
                                       .J(XLXN_8), 
                                       .K(XLXN_7), 
                                       .Q(Q2_DUMMY));
   (* HU_SET = "FlipFlop_D_25" *) 
   FJKCE_HXILINX_counter88  FlipFlop_D (.C(CLK), 
                                       .CE(CE), 
                                       .CLR(CLR), 
                                       .J(XLXN_10), 
                                       .K(XLXN_9), 
                                       .Q(Q3_DUMMY));
   (* HU_SET = "FlipFlop_E_26" *) 
   FJKCE_HXILINX_counter88  FlipFlop_E (.C(CLK), 
                                       .CE(CE), 
                                       .CLR(CLR), 
                                       .J(XLXN_12), 
                                       .K(XLXN_11), 
                                       .Q(Q4_DUMMY));
   (* HU_SET = "FlipFlop_F_27" *) 
   FJKCE_HXILINX_counter88  FlipFlop_F (.C(CLK), 
                                       .CE(CE), 
                                       .CLR(CLR), 
                                       .J(XLXN_14), 
                                       .K(XLXN_13), 
                                       .Q(Q5_DUMMY));
   (* HU_SET = "FlipFlop_G_28" *) 
   FJKCE_HXILINX_counter88  FlipFlop_G (.C(CLK), 
                                       .CE(CE), 
                                       .CLR(CLR), 
                                       .J(XLXN_16), 
                                       .K(XLXN_15), 
                                       .Q(Q6_DUMMY));
   (* HU_SET = "FlipFlop_H_29" *) 
   FJKCE_HXILINX_counter88  FlipFlop_H (.C(CLK), 
                                       .CE(CE), 
                                       .CLR(CLR), 
                                       .J(XLXN_17), 
                                       .K(Q3_DUMMY), 
                                       .Q(Q7_DUMMY));
   VCC  XLXI_1 (.P(XLXN_1));
   OR2  XLXI_2 (.I0(XLXN_3), 
               .I1(XLXN_4), 
               .O(XLXN_2));
   INV  XLXI_3 (.I(Q3_DUMMY), 
               .O(XLXN_3));
   INV  XLXI_4 (.I(Q7_DUMMY), 
               .O(XLXN_4));
   AND2  XLXI_5 (.I0(Q0_DUMMY), 
                .I1(XLXN_6), 
                .O(XLXN_5));
   INV  XLXI_6 (.I(Q3_DUMMY), 
               .O(XLXN_6));
   AND2  XLXI_7 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_7));
   AND2  XLXI_8 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_8));
   OR2  XLXI_9 (.I0(Q0_DUMMY), 
               .I1(Q7_DUMMY), 
               .O(XLXN_9));
   AND3  XLXI_10 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .O(XLXN_10));
   AND2  XLXI_11 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .O(XLXN_11));
   AND2  XLXI_12 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .O(XLXN_12));
   AND3  XLXI_13 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .O(XLXN_13));
   AND3  XLXI_14 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .O(XLXN_14));
   AND4  XLXI_15 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .I3(Q5_DUMMY), 
                 .O(XLXN_15));
   AND4  XLXI_16 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .I3(Q5_DUMMY), 
                 .O(XLXN_16));
   AND5  XLXI_17 (.I0(Q0_DUMMY), 
                 .I1(Q3_DUMMY), 
                 .I2(Q4_DUMMY), 
                 .I3(Q5_DUMMY), 
                 .I4(Q6_DUMMY), 
                 .O(XLXN_17));
   (* HU_SET = "XLXI_18_30" *) 
   AND8_HXILINX_counter88  XLXI_18 (.I0(XLXN_18), 
                                   .I1(XLXN_19), 
                                   .I2(XLXN_20), 
                                   .I3(Q3_DUMMY), 
                                   .I4(XLXN_21), 
                                   .I5(XLXN_22), 
                                   .I6(XLXN_23), 
                                   .I7(Q7_DUMMY), 
                                   .O(TC_DUMMY));
   INV  XLXI_19 (.I(Q0_DUMMY), 
                .O(XLXN_18));
   INV  XLXI_20 (.I(Q1_DUMMY), 
                .O(XLXN_19));
   INV  XLXI_21 (.I(Q2_DUMMY), 
                .O(XLXN_20));
   INV  XLXI_22 (.I(Q4_DUMMY), 
                .O(XLXN_21));
   INV  XLXI_23 (.I(Q5_DUMMY), 
                .O(XLXN_22));
   INV  XLXI_24 (.I(Q6_DUMMY), 
                .O(XLXN_23));
   AND2  XLXI_25 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
