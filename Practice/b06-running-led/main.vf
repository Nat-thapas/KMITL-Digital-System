////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 10/12/2024 14:27:16
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Classes-2024/Digital System Fundamentals Shared/Practice/b06-running-led/main.vf" -w "D:/Classes-2024/Digital System Fundamentals Shared/Practice/b06-running-led/main.sch"
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKCE_HXILINX_main(Q, C, CE, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE)
        begin
          if(!J)
          begin
            if(K)
            Q <= 1'b0;
          end
          else
          begin
            if(!K)
            Q <= 1'b1;
            else 
            Q <= !Q;
          end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module FJKPE_HXILINX_main(Q, C, CE, J, K, PRE);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input              J;
   input              K;
   input 	      PRE;	
   
   parameter INIT = 1'b1;
   reg                Q = INIT;

  
  always @(posedge C or posedge PRE)
     begin
	if (PRE)
	  Q <= 1'b1;
	else if(CE)
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_main(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale  100 ps / 10 ps

module D3_8E_HXILINX_main (D0, D1, D2, D3, D4, D5, D6, D7, A0, A1, A2, E);
    

   output D0;
   output D1;
   output D2;
   output D3;
   output D4;
   output D5;
   output D6;
   output D7;

   input  A0;
   input  A1;
   input  A2;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;
   reg D4;
   reg D5;
   reg D6;
   reg D7;

      always @ (A0 or A1 or A2 or E)
      begin
         if(!E)
           {D7, D6, D5, D4, D3, D2, D1, D0} <= 8'b0000_0000;
        else
        begin
           case({A2,A1,A0})
             3'b000 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0000_0001;
             3'b001 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0000_0010;
             3'b010 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0000_0100;
             3'b011 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0000_1000;
             3'b100 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0001_0000;
             3'b101 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0010_0000;
             3'b110 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b0100_0000;
             3'b111 :  {D7, D6, D5, D4, D3, D2, D1, D0} <=  8'b1000_0000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module OBUFT8_HXILINX_main (O, I, T);
    

   output [7:0] O;

   input  [7:0] I;
   input        T;

assign O = (!T) ? I : 8'bzzzz_zzzz;

endmodule
`timescale 1ns / 1ps

module clkdiv20k_MUSER_main(CLK, 
                            CLKO);

    input CLK;
   output CLKO;
   
   wire CLK_I;
   wire XLXN_3;
   wire XLXN_11;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_27;
   wire XLXN_37;
   wire XLXN_41;
   wire CLKO_DUMMY;
   
   assign CLKO = CLKO_DUMMY;
   (* HU_SET = "XLXI_1_19" *) 
   CD4CE_HXILINX_main  XLXI_1 (.C(CLK_I), 
                              .CE(XLXN_3), 
                              .CLR(XLXN_15), 
                              .CEO(XLXN_14), 
                              .Q0(), 
                              .Q1(), 
                              .Q2(), 
                              .Q3(), 
                              .TC());
   VCC  XLXI_2 (.P(XLXN_3));
   GND  XLXI_3 (.G(XLXN_15));
   FD_1 #( .INIT(1'b0) ) XLXI_10 (.C(XLXN_41), 
                 .D(XLXN_11), 
                 .Q(CLKO_DUMMY));
   INV  XLXI_11 (.I(CLKO_DUMMY), 
                .O(XLXN_11));
   (* HU_SET = "XLXI_14_20" *) 
   CD4CE_HXILINX_main  XLXI_14 (.C(CLK_I), 
                               .CE(XLXN_14), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_27), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_17_21" *) 
   CD4CE_HXILINX_main  XLXI_17 (.C(CLK_I), 
                               .CE(XLXN_27), 
                               .CLR(XLXN_15), 
                               .CEO(XLXN_37), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_22_22" *) 
   CD4CE_HXILINX_main  XLXI_22 (.C(CLK_I), 
                               .CE(XLXN_37), 
                               .CLR(XLXN_15), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_41));
   INV  XLXI_34 (.I(CLK), 
                .O(CLK_I));
endmodule
`timescale 1ns / 1ps

module edetect_MUSER_main(CLK, 
                          I, 
                          CEO);

    input CLK;
    input I;
   output CEO;
   
   wire XLXN_5;
   wire XLXN_6;
   
   FD #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
              .D(I), 
              .Q(XLXN_6));
   FD #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
              .D(XLXN_6), 
              .Q(XLXN_5));
   AND2B1  XLXI_5 (.I0(XLXN_5), 
                  .I1(XLXN_6), 
                  .O(CEO));
endmodule
`timescale 1ns / 1ps

module and2x8b_MUSER_main(A, 
                          B, 
                          R);

    input [7:0] A;
    input [7:0] B;
   output [7:0] R;
   
   
   AND2  XLXI_9 (.I0(B[0]), 
                .I1(A[0]), 
                .O(R[0]));
   AND2  XLXI_10 (.I0(B[1]), 
                 .I1(A[1]), 
                 .O(R[1]));
   AND2  XLXI_11 (.I0(B[2]), 
                 .I1(A[2]), 
                 .O(R[2]));
   AND2  XLXI_12 (.I0(B[3]), 
                 .I1(A[3]), 
                 .O(R[3]));
   AND2  XLXI_13 (.I0(B[4]), 
                 .I1(A[4]), 
                 .O(R[4]));
   AND2  XLXI_14 (.I0(B[5]), 
                 .I1(A[5]), 
                 .O(R[5]));
   AND2  XLXI_15 (.I0(B[6]), 
                 .I1(A[6]), 
                 .O(R[6]));
   AND2  XLXI_16 (.I0(B[7]), 
                 .I1(A[7]), 
                 .O(R[7]));
endmodule
`timescale 1ns / 1ps

module wtb8_MUSER_main(I0, 
                       I1, 
                       I2, 
                       I3, 
                       I4, 
                       I5, 
                       I6, 
                       I7, 
                       O);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
    input I6;
    input I7;
   output [7:0] O;
   
   
   BUF  XLXI_1 (.I(I0), 
               .O(O[0]));
   BUF  XLXI_2 (.I(I1), 
               .O(O[1]));
   BUF  XLXI_3 (.I(I2), 
               .O(O[2]));
   BUF  XLXI_4 (.I(I3), 
               .O(O[3]));
   BUF  XLXI_5 (.I(I4), 
               .O(O[4]));
   BUF  XLXI_6 (.I(I5), 
               .O(O[5]));
   BUF  XLXI_7 (.I(I6), 
               .O(O[6]));
   BUF  XLXI_8 (.I(I7), 
               .O(O[7]));
endmodule
`timescale 1ns / 1ps

module counter706_MUSER_main(CE, 
                             CLK, 
                             CLR, 
                             CEO, 
                             Q0, 
                             Q1, 
                             Q2, 
                             TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output TC;
   
   wire Q3;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_23" *) 
   FJKPE_HXILINX_main  FlipFlop_A (.C(CLK), 
                                  .CE(CE), 
                                  .J(XLXN_2), 
                                  .K(XLXN_1), 
                                  .PRE(CLR), 
                                  .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_24" *) 
   FJKPE_HXILINX_main  FlipFlop_B (.C(CLK), 
                                  .CE(CE), 
                                  .J(XLXN_8), 
                                  .K(XLXN_3), 
                                  .PRE(CLR), 
                                  .Q(Q1_DUMMY));
   (* HU_SET = "FlipFlop_C_25" *) 
   FJKPE_HXILINX_main  FlipFlop_C (.C(CLK), 
                                  .CE(CE), 
                                  .J(XLXN_17), 
                                  .K(XLXN_13), 
                                  .PRE(CLR), 
                                  .Q(Q2_DUMMY));
   (* HU_SET = "FlipFlop_D_26" *) 
   FJKCE_HXILINX_main  FlipFlop_D (.C(CLK), 
                                  .CE(CE), 
                                  .CLR(CLR), 
                                  .J(XLXN_19), 
                                  .K(XLXN_18), 
                                  .Q(Q3));
   VCC  XLXI_1 (.P(XLXN_1));
   VCC  XLXI_2 (.P(XLXN_2));
   OR2  XLXI_3 (.I0(XLXN_4), 
               .I1(XLXN_5), 
               .O(XLXN_3));
   AND2  XLXI_4 (.I0(Q0_DUMMY), 
                .I1(Q3), 
                .O(XLXN_4));
   AND2  XLXI_5 (.I0(XLXN_6), 
                .I1(XLXN_7), 
                .O(XLXN_5));
   INV  XLXI_6 (.I(Q0_DUMMY), 
               .O(XLXN_6));
   INV  XLXI_7 (.I(Q3), 
               .O(XLXN_7));
   OR2  XLXI_8 (.I0(XLXN_9), 
               .I1(XLXN_10), 
               .O(XLXN_8));
   AND2  XLXI_9 (.I0(Q0_DUMMY), 
                .I1(Q3), 
                .O(XLXN_9));
   AND3  XLXI_10 (.I0(Q2_DUMMY), 
                 .I1(XLXN_11), 
                 .I2(XLXN_12), 
                 .O(XLXN_10));
   INV  XLXI_11 (.I(Q0_DUMMY), 
                .O(XLXN_11));
   INV  XLXI_12 (.I(Q3), 
                .O(XLXN_12));
   AND3  XLXI_13 (.I0(XLXN_14), 
                 .I1(XLXN_15), 
                 .I2(XLXN_16), 
                 .O(XLXN_13));
   INV  XLXI_14 (.I(Q0_DUMMY), 
                .O(XLXN_14));
   INV  XLXI_15 (.I(Q1_DUMMY), 
                .O(XLXN_15));
   INV  XLXI_16 (.I(Q3), 
                .O(XLXN_16));
   AND3  XLXI_17 (.I0(Q0_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q3), 
                 .O(XLXN_17));
   AND2  XLXI_18 (.I0(Q1_DUMMY), 
                 .I1(Q2_DUMMY), 
                 .O(XLXN_18));
   AND3  XLXI_19 (.I0(XLXN_20), 
                 .I1(XLXN_21), 
                 .I2(XLXN_22), 
                 .O(XLXN_19));
   INV  XLXI_20 (.I(Q0_DUMMY), 
                .O(XLXN_20));
   INV  XLXI_21 (.I(Q1_DUMMY), 
                .O(XLXN_21));
   INV  XLXI_22 (.I(Q2_DUMMY), 
                .O(XLXN_22));
   AND4  XLXI_23 (.I0(XLXN_23), 
                 .I1(Q1_DUMMY), 
                 .I2(Q2_DUMMY), 
                 .I3(Q3), 
                 .O(TC_DUMMY));
   INV  XLXI_24 (.I(Q0_DUMMY), 
                .O(XLXN_23));
   AND2  XLXI_25 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module main(BTN1, 
            OSC, 
            SW, 
            LED, 
            MN);

    input BTN1;
    input OSC;
    input [7:0] SW;
   output [7:0] LED;
   output [7:0] MN;
   
   wire tdhnt;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_22;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire [7:0] XLXN_39;
   wire XLXN_41;
   wire XLXN_44;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_51;
   wire XLXN_124;
   wire XLXN_126;
   wire XLXN_127;
   wire XLXN_128;
   wire XLXN_131;
   wire [7:0] LED_DUMMY;
   
   assign LED[7:0] = LED_DUMMY[7:0];
   counter706_MUSER_main  XLXI_1 (.CE(XLXN_127), 
                                 .CLK(tdhnt), 
                                 .CLR(XLXN_131), 
                                 .CEO(), 
                                 .Q0(XLXN_1), 
                                 .Q1(XLXN_2), 
                                 .Q2(XLXN_3), 
                                 .TC());
   (* HU_SET = "XLXI_2_27" *) 
   D3_8E_HXILINX_main  XLXI_2 (.A0(XLXN_1), 
                              .A1(XLXN_2), 
                              .A2(XLXN_3), 
                              .E(XLXN_24), 
                              .D0(XLXN_25), 
                              .D1(XLXN_26), 
                              .D2(XLXN_28), 
                              .D3(XLXN_29), 
                              .D4(XLXN_30), 
                              .D5(XLXN_31), 
                              .D6(XLXN_32), 
                              .D7(XLXN_33));
   GND  XLXI_7 (.G(XLXN_8));
   GND  XLXI_11 (.G(XLXN_10));
   AND2B1  XLXI_15 (.I0(XLXN_22), 
                   .I1(XLXN_24), 
                   .O(XLXN_128));
   wtb8_MUSER_main  XLXI_16 (.I0(XLXN_25), 
                            .I1(XLXN_26), 
                            .I2(XLXN_28), 
                            .I3(XLXN_29), 
                            .I4(XLXN_30), 
                            .I5(XLXN_31), 
                            .I6(XLXN_32), 
                            .I7(XLXN_33), 
                            .O(LED_DUMMY[7:0]));
   and2x8b_MUSER_main  XLXI_17 (.A(LED_DUMMY[7:0]), 
                               .B(SW[7:0]), 
                               .R(XLXN_39[7:0]));
   (* HU_SET = "XLXI_18_28" *) 
   OBUFT8_HXILINX_main  XLXI_18 (.I(XLXN_39[7:0]), 
                                .T(XLXN_41), 
                                .O(MN[7:0]));
   INV  XLXI_19 (.I(XLXN_24), 
                .O(XLXN_41));
   (* HU_SET = "XLXI_20_29" *) 
   FJKCE_HXILINX_main  XLXI_20 (.C(OSC), 
                               .CE(XLXN_51), 
                               .CLR(XLXN_8), 
                               .J(XLXN_44), 
                               .K(XLXN_46), 
                               .Q(XLXN_24));
   (* HU_SET = "XLXI_21_30" *) 
   FJKCE_HXILINX_main  XLXI_21 (.C(OSC), 
                               .CE(XLXN_51), 
                               .CLR(XLXN_10), 
                               .J(XLXN_24), 
                               .K(XLXN_47), 
                               .Q(XLXN_22));
   VCC  XLXI_23 (.P(XLXN_44));
   GND  XLXI_25 (.G(XLXN_46));
   GND  XLXI_26 (.G(XLXN_47));
   edetect_MUSER_main  XLXI_27 (.CLK(OSC), 
                               .I(BTN1), 
                               .CEO(XLXN_51));
   (* HU_SET = "XLXI_64_31" *) 
   CD4CE_HXILINX_main  XLXI_64 (.C(tdhnt), 
                               .CE(XLXN_126), 
                               .CLR(XLXN_131), 
                               .CEO(XLXN_127), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_65_32" *) 
   CD4CE_HXILINX_main  XLXI_65 (.C(tdhnt), 
                               .CE(XLXN_124), 
                               .CLR(XLXN_131), 
                               .CEO(XLXN_126), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   (* HU_SET = "XLXI_66_33" *) 
   CD4CE_HXILINX_main  XLXI_66 (.C(tdhnt), 
                               .CE(XLXN_128), 
                               .CLR(XLXN_131), 
                               .CEO(XLXN_124), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC());
   GND  XLXI_67 (.G(XLXN_131));
   clkdiv20k_MUSER_main  XLXI_68 (.CLK(OSC), 
                                 .CLKO(tdhnt));
endmodule
