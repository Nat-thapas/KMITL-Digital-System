////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ssd4drbp.vf
// /___/   /\     Timestamp : 08/22/2024 16:12:21
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Classes-2024/Digital System Fundamentals Shared/Practice/a9-segment-of-segment/ssd4drbp.vf" -w "D:/Classes-2024/Digital System Fundamentals Shared/Practice/a9-segment-of-segment/ssd4drbp.sch"
//Design Name: ssd4drbp
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_ssd4drbp (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_ssd4drbp (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_ssd4drbp(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module ssd4drbp(D0, 
                D1, 
                D2, 
                D3, 
                ScanCLK, 
                COM, 
                S);

    input [7:0] D0;
    input [7:0] D1;
    input [7:0] D2;
    input [7:0] D3;
    input ScanCLK;
   output [3:0] COM;
   output [7:0] S;
   
   wire XLXN_12;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_141;
   wire XLXN_145;
   wire XLXN_146;
   wire XLXN_236;
   wire XLXN_237;
   wire XLXN_238;
   wire XLXN_239;
   
   (* HU_SET = "XLXI_1_18" *) 
   M4_1E_HXILINX_ssd4drbp  XLXI_1 (.D0(D0[0]), 
                                  .D1(D1[0]), 
                                  .D2(D2[0]), 
                                  .D3(D3[0]), 
                                  .E(XLXN_12), 
                                  .S0(XLXN_29), 
                                  .S1(XLXN_28), 
                                  .O(S[0]));
   (* HU_SET = "XLXI_3_19" *) 
   M4_1E_HXILINX_ssd4drbp  XLXI_3 (.D0(D0[1]), 
                                  .D1(D1[1]), 
                                  .D2(D2[1]), 
                                  .D3(D3[1]), 
                                  .E(XLXN_12), 
                                  .S0(XLXN_29), 
                                  .S1(XLXN_28), 
                                  .O(S[1]));
   (* HU_SET = "XLXI_4_20" *) 
   M4_1E_HXILINX_ssd4drbp  XLXI_4 (.D0(D0[2]), 
                                  .D1(D1[2]), 
                                  .D2(D2[2]), 
                                  .D3(D3[2]), 
                                  .E(XLXN_12), 
                                  .S0(XLXN_29), 
                                  .S1(XLXN_28), 
                                  .O(S[2]));
   (* HU_SET = "XLXI_5_21" *) 
   M4_1E_HXILINX_ssd4drbp  XLXI_5 (.D0(D0[3]), 
                                  .D1(D1[3]), 
                                  .D2(D2[3]), 
                                  .D3(D3[3]), 
                                  .E(XLXN_12), 
                                  .S0(XLXN_29), 
                                  .S1(XLXN_28), 
                                  .O(S[3]));
   (* HU_SET = "XLXI_6_22" *) 
   M4_1E_HXILINX_ssd4drbp  XLXI_6 (.D0(D0[4]), 
                                  .D1(D1[4]), 
                                  .D2(D2[4]), 
                                  .D3(D3[4]), 
                                  .E(XLXN_12), 
                                  .S0(XLXN_29), 
                                  .S1(XLXN_28), 
                                  .O(S[4]));
   (* HU_SET = "XLXI_7_23" *) 
   M4_1E_HXILINX_ssd4drbp  XLXI_7 (.D0(D0[5]), 
                                  .D1(D1[5]), 
                                  .D2(D2[5]), 
                                  .D3(D3[5]), 
                                  .E(XLXN_12), 
                                  .S0(XLXN_29), 
                                  .S1(XLXN_28), 
                                  .O(S[5]));
   (* HU_SET = "XLXI_8_24" *) 
   M4_1E_HXILINX_ssd4drbp  XLXI_8 (.D0(D0[6]), 
                                  .D1(D1[6]), 
                                  .D2(D2[6]), 
                                  .D3(D3[6]), 
                                  .E(XLXN_12), 
                                  .S0(XLXN_29), 
                                  .S1(XLXN_28), 
                                  .O(S[6]));
   (* HU_SET = "XLXI_9_25" *) 
   M4_1E_HXILINX_ssd4drbp  XLXI_9 (.D0(D0[7]), 
                                  .D1(D1[7]), 
                                  .D2(D2[7]), 
                                  .D3(D3[7]), 
                                  .E(XLXN_12), 
                                  .S0(XLXN_29), 
                                  .S1(XLXN_28), 
                                  .O(S[7]));
   VCC  XLXI_18 (.P(XLXN_12));
   GND  XLXI_119 (.G(XLXN_141));
   (* HU_SET = "XLXI_162_26" *) 
   CB2CE_HXILINX_ssd4drbp  XLXI_162 (.C(ScanCLK), 
                                    .CE(XLXN_145), 
                                    .CLR(XLXN_141), 
                                    .CEO(), 
                                    .Q0(XLXN_29), 
                                    .Q1(XLXN_28), 
                                    .TC());
   VCC  XLXI_163 (.P(XLXN_145));
   VCC  XLXI_165 (.P(XLXN_146));
   (* HU_SET = "XLXI_210_27" *) 
   D2_4E_HXILINX_ssd4drbp  XLXI_210 (.A0(XLXN_29), 
                                    .A1(XLXN_28), 
                                    .E(XLXN_146), 
                                    .D0(XLXN_236), 
                                    .D1(XLXN_237), 
                                    .D2(XLXN_238), 
                                    .D3(XLXN_239));
   INV  XLXI_211 (.I(XLXN_236), 
                 .O(COM[0]));
   INV  XLXI_212 (.I(XLXN_237), 
                 .O(COM[1]));
   INV  XLXI_213 (.I(XLXN_238), 
                 .O(COM[2]));
   INV  XLXI_214 (.I(XLXN_239), 
                 .O(COM[3]));
endmodule
